Welcome to pg_cirrus - Hassle-free PostgreSQL Cluster Setup


💡 First run detected: please enter the following details:
Ansible vault password file: All checks for VAULT_PASSWORD_FILE were passed

Subnet address for the cluster: 
Primary PostgreSQL Server IP address: 
Standby 1 IP address: 
Standby 2 IP address: 
IP address of this node to setup pgpool: 
Enter Delegate IP for Pgpool VIP: 

✅ Configuration saved to saved_config.json 

[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Install PostgreSQL] ******************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for localhost

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [localhost]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [localhost]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [localhost]

TASK [Download the PGDG RPM package] *******************************************
changed: [localhost]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
changed: [localhost]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [localhost]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["yum", "makecache"], "delta": "0:00:15.498440", "end": "2025-08-07 06:58:36.779565", "msg": "non-zero return code", "rc": 1, "start": "2025-08-07 06:58:21.281125", "stderr": "Importing GPG key 0x08B40D20:\n Userid     : \"PostgreSQL RPM Repository <pgsql-pkg-yum@lists.postgresql.org>\"\n Fingerprint: D4BF 08AE 67A0 B4C7 A1DB CCD2 40BC A2B4 08B4 0D20\n From       : /etc/pki/rpm-gpg/PGDG-RPM-GPG-KEY-RHEL\nError: Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "stderr_lines": ["Importing GPG key 0x08B40D20:", " Userid     : \"PostgreSQL RPM Repository <pgsql-pkg-yum@lists.postgresql.org>\"", " Fingerprint: D4BF 08AE 67A0 B4C7 A1DB CCD2 40BC A2B4 08B4 0D20", " From       : /etc/pki/rpm-gpg/PGDG-RPM-GPG-KEY-RHEL", "Error: Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature"], "stdout": "AlmaLinux 9 - AppStream                          39 MB/s |  15 MB     00:00    \nAlmaLinux 9 - BaseOS                             59 MB/s |  17 MB     00:00    \nAlmaLinux 9 - Extras                            261 kB/s |  20 kB     00:00    \nExtra Packages for Enterprise Linux 9 - x86_64   36 MB/s |  20 MB     00:00    \nExtra Packages for Enterprise Linux 9 openh264  8.9 kB/s | 2.5 kB     00:00    \nPostgreSQL common RPMs for RHEL / Rocky / AlmaL 7.7 kB/s | 659  B     00:00    \nPostgreSQL common RPMs for RHEL / Rocky / AlmaL 2.4 MB/s | 2.4 kB     00:00    \nIs this ok [y/N]: PostgreSQL common RPMs for RHEL / Rocky / AlmaL  13 kB/s | 659  B     00:00    ", "stdout_lines": ["AlmaLinux 9 - AppStream                          39 MB/s |  15 MB     00:00    ", "AlmaLinux 9 - BaseOS                             59 MB/s |  17 MB     00:00    ", "AlmaLinux 9 - Extras                            261 kB/s |  20 kB     00:00    ", "Extra Packages for Enterprise Linux 9 - x86_64   36 MB/s |  20 MB     00:00    ", "Extra Packages for Enterprise Linux 9 openh264  8.9 kB/s | 2.5 kB     00:00    ", "PostgreSQL common RPMs for RHEL / Rocky / AlmaL 7.7 kB/s | 659  B     00:00    ", "PostgreSQL common RPMs for RHEL / Rocky / AlmaL 2.4 MB/s | 2.4 kB     00:00    ", "Is this ok [y/N]: PostgreSQL common RPMs for RHEL / Rocky / AlmaL  13 kB/s | 659  B     00:00    "]}

PLAY RECAP *********************************************************************
localhost                  : ok=5    changed=3    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0   

Error: Failed to execute setup-pgdg-repo.yml playbook.
Enter PostgreSQL version (Latest: 17): Enter the PostgreSQL port number: (Default: 5432): Enter the Data Directory Path: (Default: /home/postgres/stormatics/pg_cirrus/data): Generating conf.yml ...
Generating inventory file ...

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for PRIMARY

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [PRIMARY]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [PRIMARY]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [PRIMARY]

TASK [Download the PGDG RPM package] *******************************************
changed: [PRIMARY]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
changed: [PRIMARY]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [PRIMARY]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************

pg_cirrus terminated by the user.
Welcome to pg_cirrus - Hassle-free PostgreSQL Cluster Setup


🔁 Loaded configuration from saved_config.json
{
    "vault_password_file": "vault",
    "cluster_subnet": "0.0.0.0/0",
    "primary_ip": "10.10.10.101",
    "standby_ips": [
        "10.10.10.102",
        "10.10.10.103"
    ],
    "pgpool_ip": "10.10.10.100",
    "delegate_ip": "10.10.10.104"
} 

[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Install PostgreSQL] ******************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for localhost

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [localhost]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [localhost]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [localhost]

TASK [Download the PGDG RPM package] *******************************************
ok: [localhost]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [localhost]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [localhost]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=6    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   

Enter PostgreSQL version (Latest: 17): Enter the PostgreSQL port number: (Default: 5432): Enter the Data Directory Path: (Default: /home/postgres/stormatics/pg_cirrus/data): Generating conf.yml ...
Generating inventory file ...

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for PRIMARY

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [PRIMARY]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [PRIMARY]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [PRIMARY]

TASK [Download the PGDG RPM package] *******************************************
ok: [PRIMARY]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [PRIMARY]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [PRIMARY]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [PRIMARY]

TASK [Install PostgreSQL-17] ***************************************************
changed: [PRIMARY]

TASK [Creating data directory] *************************************************
changed: [PRIMARY]

TASK [Stop already running service] ********************************************
skipping: [PRIMARY]

TASK [Installing python3-psycopg2] *********************************************
changed: [PRIMARY]

TASK [Creating password file] **************************************************
changed: [PRIMARY]

TASK [Check if the data directory is empty] ************************************
ok: [PRIMARY]

TASK [Display message and exit if the data directory is not empty] *************
skipping: [PRIMARY]

TASK [Initialize the data directory for the Primary PostgreSQL server] *********
changed: [PRIMARY]

TASK [Append PostgreSQL Configuration] *****************************************
changed: [PRIMARY] => (item=listen_addresses = '*')
changed: [PRIMARY] => (item=wal_level = replica)
changed: [PRIMARY] => (item=max_wal_senders = 10)
changed: [PRIMARY] => (item=wal_keep_size = 1GB)

TASK [Start the server] ********************************************************
changed: [PRIMARY]

TASK [Creating a replication slots] ********************************************
[WARNING]: Database name has not been passed, used default database to connect
to.
ok: [PRIMARY] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
ok: [PRIMARY] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})

TASK [Creating a replication user] *********************************************
changed: [PRIMARY]

TASK [Update pg_hba.conf] ******************************************************
changed: [PRIMARY]

TASK [Restart the server] ******************************************************
changed: [PRIMARY]

TASK [Install pgpool2] *********************************************************
skipping: [PRIMARY]

TASK [Install pgpool-II release RPM] *******************************************
changed: [PRIMARY]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
fatal: [PRIMARY]: FAILED! => {"changed": false, "failures": [], "msg": "Depsolve Error occurred: \n Problem: cannot install the best candidate for the job\n  - nothing provides libmemcached.so.11()(64bit) needed by pgpool-II-pg17-4.5.7-1pgdg.rhel9.x86_64 from pgpool45", "rc": 1, "results": []}

PLAY RECAP *********************************************************************
PRIMARY                    : ok=21   changed=13   unreachable=0    failed=1    skipped=6    rescued=0    ignored=0   

Error: Failed to execute setup-primary.yml playbook.
Exiting pg_cirrus.
Welcome to pg_cirrus - Hassle-free PostgreSQL Cluster Setup


🔁 Loaded configuration from saved_config.json
{
    "vault_password_file": "vault",
    "cluster_subnet": "0.0.0.0/0",
    "primary_ip": "10.10.10.101",
    "standby_ips": [
        "10.10.10.102",
        "10.10.10.103"
    ],
    "pgpool_ip": "10.10.10.100",
    "delegate_ip": "10.10.10.104"
} 

[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Install PostgreSQL] ******************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for localhost

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [localhost]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [localhost]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [localhost]

TASK [Download the PGDG RPM package] *******************************************
ok: [localhost]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [localhost]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [localhost]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=6    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   

Enter PostgreSQL version (Latest: 17): Enter the PostgreSQL port number: (Default: 5432): Enter the Data Directory Path: (Default: /home/postgres/stormatics/pg_cirrus/data): Generating conf.yml ...
Generating inventory file ...

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for PRIMARY

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [PRIMARY]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [PRIMARY]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [PRIMARY]

TASK [Download the PGDG RPM package] *******************************************
ok: [PRIMARY]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [PRIMARY]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [PRIMARY]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [PRIMARY]

TASK [Install PostgreSQL-17] ***************************************************
ok: [PRIMARY]

TASK [Creating data directory] *************************************************
ok: [PRIMARY]

TASK [Stop already running service] ********************************************
skipping: [PRIMARY]

TASK [Installing python3-psycopg2] *********************************************
ok: [PRIMARY]

TASK [Creating password file] **************************************************
ok: [PRIMARY]

TASK [Check if the data directory is empty] ************************************
ok: [PRIMARY]

TASK [Display message and exit if the data directory is not empty] *************
skipping: [PRIMARY]

TASK [Initialize the data directory for the Primary PostgreSQL server] *********
changed: [PRIMARY]

TASK [Append PostgreSQL Configuration] *****************************************
changed: [PRIMARY] => (item=listen_addresses = '*')
changed: [PRIMARY] => (item=wal_level = replica)
changed: [PRIMARY] => (item=max_wal_senders = 10)
changed: [PRIMARY] => (item=wal_keep_size = 1GB)

TASK [Start the server] ********************************************************
changed: [PRIMARY]

TASK [Creating a replication slots] ********************************************
[WARNING]: Database name has not been passed, used default database to connect
to.
ok: [PRIMARY] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
ok: [PRIMARY] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})

TASK [Creating a replication user] *********************************************
changed: [PRIMARY]

TASK [Update pg_hba.conf] ******************************************************
changed: [PRIMARY]

TASK [Restart the server] ******************************************************
changed: [PRIMARY]

TASK [Install pgpool2] *********************************************************
skipping: [PRIMARY]

TASK [Install pgpool-II release RPM] *******************************************
ok: [PRIMARY]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
fatal: [PRIMARY]: FAILED! => {"changed": false, "failures": [], "msg": "Depsolve Error occurred: \n Problem: cannot install the best candidate for the job\n  - nothing provides libmemcached.so.11()(64bit) needed by pgpool-II-pg17-4.5.7-1pgdg.rhel9.x86_64 from pgpool45", "rc": 1, "results": []}

PLAY RECAP *********************************************************************
PRIMARY                    : ok=21   changed=8    unreachable=0    failed=1    skipped=6    rescued=0    ignored=0   

Error: Failed to execute setup-primary.yml playbook.
Exiting pg_cirrus.
Welcome to pg_cirrus - Hassle-free PostgreSQL Cluster Setup


🔁 Loaded configuration from saved_config.json
{
    "vault_password_file": "vault",
    "cluster_subnet": "0.0.0.0/0",
    "primary_ip": "10.10.10.101",
    "standby_ips": [
        "10.10.10.102",
        "10.10.10.103"
    ],
    "pgpool_ip": "10.10.10.100",
    "delegate_ip": "10.10.10.104"
} 

[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Install PostgreSQL] ******************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for localhost

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [localhost]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [localhost]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [localhost]

TASK [Download the PGDG RPM package] *******************************************
ok: [localhost]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [localhost]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [localhost]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=6    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   

Enter PostgreSQL version (Latest: 17): Enter the PostgreSQL port number: (Default: 5432): Enter the Data Directory Path: (Default: /home/postgres/stormatics/pg_cirrus/data): Generating conf.yml ...
Generating inventory file ...

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for PRIMARY

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [PRIMARY]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [PRIMARY]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [PRIMARY]

TASK [Download the PGDG RPM package] *******************************************
ok: [PRIMARY]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [PRIMARY]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [PRIMARY]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [PRIMARY]

TASK [Install PostgreSQL-17] ***************************************************
ok: [PRIMARY]

TASK [Creating data directory] *************************************************
ok: [PRIMARY]

TASK [Stop already running service] ********************************************
skipping: [PRIMARY]

TASK [Installing python3-psycopg2] *********************************************
ok: [PRIMARY]

TASK [Creating password file] **************************************************
ok: [PRIMARY]

TASK [Check if the data directory is empty] ************************************
ok: [PRIMARY]

TASK [Display message and exit if the data directory is not empty] *************
fatal: [PRIMARY]: FAILED! => {"changed": false, "msg": "The data directory '/home/postgres/stormatics/pg_cirrus/data' is not empty."}

PLAY RECAP *********************************************************************
PRIMARY                    : ok=13   changed=2    unreachable=0    failed=1    skipped=4    rescued=0    ignored=0   

Error: Failed to execute setup-primary.yml playbook.
Exiting pg_cirrus.
Welcome to pg_cirrus - Hassle-free PostgreSQL Cluster Setup


🔁 Loaded configuration from saved_config.json
{
    "vault_password_file": "vault",
    "cluster_subnet": "0.0.0.0/0",
    "primary_ip": "10.10.10.101",
    "standby_ips": [
        "10.10.10.102",
        "10.10.10.103"
    ],
    "pgpool_ip": "10.10.10.100",
    "delegate_ip": "10.10.10.104"
} 

[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Install PostgreSQL] ******************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for localhost

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [localhost]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [localhost]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [localhost]

TASK [Download the PGDG RPM package] *******************************************
ok: [localhost]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [localhost]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [localhost]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=6    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   

Enter PostgreSQL version (Latest: 17): Enter the PostgreSQL port number: (Default: 5432): Enter the Data Directory Path: (Default: /home/postgres/stormatics/pg_cirrus/data): Generating conf.yml ...
Generating inventory file ...

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for PRIMARY

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [PRIMARY]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [PRIMARY]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [PRIMARY]

TASK [Download the PGDG RPM package] *******************************************
ok: [PRIMARY]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [PRIMARY]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [PRIMARY]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [PRIMARY]

TASK [Install PostgreSQL-17] ***************************************************
ok: [PRIMARY]

TASK [Creating data directory] *************************************************
changed: [PRIMARY]

TASK [Stop already running service] ********************************************
skipping: [PRIMARY]

TASK [Installing python3-psycopg2] *********************************************
ok: [PRIMARY]

TASK [Creating password file] **************************************************
ok: [PRIMARY]

TASK [Check if the data directory is empty] ************************************
ok: [PRIMARY]

TASK [Display message and exit if the data directory is not empty] *************
skipping: [PRIMARY]

TASK [Initialize the data directory for the Primary PostgreSQL server] *********
changed: [PRIMARY]

TASK [Append PostgreSQL Configuration] *****************************************
changed: [PRIMARY] => (item=listen_addresses = '*')
changed: [PRIMARY] => (item=wal_level = replica)
changed: [PRIMARY] => (item=max_wal_senders = 10)
changed: [PRIMARY] => (item=wal_keep_size = 1GB)

TASK [Start the server] ********************************************************
changed: [PRIMARY]

TASK [Creating a replication slots] ********************************************
[WARNING]: Database name has not been passed, used default database to connect
to.
ok: [PRIMARY] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
ok: [PRIMARY] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})

TASK [Creating a replication user] *********************************************
changed: [PRIMARY]

TASK [Update pg_hba.conf] ******************************************************
changed: [PRIMARY]

TASK [Restart the server] ******************************************************
changed: [PRIMARY]

TASK [Install pgpool2] *********************************************************
skipping: [PRIMARY]

TASK [Install pgpool-II release RPM] *******************************************
ok: [PRIMARY]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
fatal: [PRIMARY]: FAILED! => {"changed": false, "failures": [], "msg": "Depsolve Error occurred: \n Problem: cannot install the best candidate for the job\n  - nothing provides libmemcached.so.11()(64bit) needed by pgpool-II-pg17-4.5.7-1pgdg.rhel9.x86_64 from pgpool45", "rc": 1, "results": []}

PLAY RECAP *********************************************************************
PRIMARY                    : ok=21   changed=9    unreachable=0    failed=1    skipped=6    rescued=0    ignored=0   

Error: Failed to execute setup-primary.yml playbook.
Exiting pg_cirrus.
Welcome to pg_cirrus - Hassle-free PostgreSQL Cluster Setup


🔁 Loaded configuration from saved_config.json
{
    "vault_password_file": "vault",
    "cluster_subnet": "0.0.0.0/0",
    "primary_ip": "10.10.10.101",
    "standby_ips": [
        "10.10.10.102",
        "10.10.10.103"
    ],
    "pgpool_ip": "10.10.10.100",
    "delegate_ip": "10.10.10.104"
} 

[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Install PostgreSQL] ******************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for localhost

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [localhost]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [localhost]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [localhost]

TASK [Download the PGDG RPM package] *******************************************
ok: [localhost]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [localhost]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [localhost]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=6    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   

Enter PostgreSQL version (Latest: 17): Enter the PostgreSQL port number: (Default: 5432): Enter the Data Directory Path: (Default: /home/postgres/stormatics/pg_cirrus/data): Generating conf.yml ...
Generating inventory file ...

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for PRIMARY

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [PRIMARY]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [PRIMARY]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [PRIMARY]

TASK [Download the PGDG RPM package] *******************************************
ok: [PRIMARY]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [PRIMARY]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [PRIMARY]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [PRIMARY]

TASK [Install PostgreSQL-17] ***************************************************
ok: [PRIMARY]

TASK [Creating data directory] *************************************************
ok: [PRIMARY]

TASK [Stop already running service] ********************************************
skipping: [PRIMARY]

TASK [Installing python3-psycopg2] *********************************************
ok: [PRIMARY]

TASK [Creating password file] **************************************************
ok: [PRIMARY]

TASK [Check if the data directory is empty] ************************************
ok: [PRIMARY]

TASK [Display message and exit if the data directory is not empty] *************
skipping: [PRIMARY]

TASK [Initialize the data directory for the Primary PostgreSQL server] *********
changed: [PRIMARY]

TASK [Append PostgreSQL Configuration] *****************************************
changed: [PRIMARY] => (item=listen_addresses = '*')
changed: [PRIMARY] => (item=wal_level = replica)
changed: [PRIMARY] => (item=max_wal_senders = 10)
changed: [PRIMARY] => (item=wal_keep_size = 1GB)

TASK [Start the server] ********************************************************
changed: [PRIMARY]

TASK [Creating a replication slots] ********************************************
[WARNING]: Database name has not been passed, used default database to connect
to.
ok: [PRIMARY] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
ok: [PRIMARY] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})

TASK [Creating a replication user] *********************************************
changed: [PRIMARY]

TASK [Update pg_hba.conf] ******************************************************
changed: [PRIMARY]

TASK [Restart the server] ******************************************************
changed: [PRIMARY]

TASK [Install pgpool2] *********************************************************
skipping: [PRIMARY]

TASK [Install pgpool-II release RPM] *******************************************
ok: [PRIMARY]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
fatal: [PRIMARY]: FAILED! => {"changed": false, "failures": [], "msg": "Depsolve Error occurred: \n Problem: cannot install the best candidate for the job\n  - nothing provides libmemcached.so.11()(64bit) needed by pgpool-II-pg17-4.5.7-1pgdg.rhel9.x86_64 from pgpool45", "rc": 1, "results": []}

PLAY RECAP *********************************************************************
PRIMARY                    : ok=21   changed=8    unreachable=0    failed=1    skipped=6    rescued=0    ignored=0   

Error: Failed to execute setup-primary.yml playbook.
Exiting pg_cirrus.
Welcome to pg_cirrus - Hassle-free PostgreSQL Cluster Setup


🔁 Loaded configuration from saved_config.json
{
    "vault_password_file": "vault",
    "cluster_subnet": "0.0.0.0/0",
    "primary_ip": "10.10.10.101",
    "standby_ips": [
        "10.10.10.102",
        "10.10.10.103"
    ],
    "pgpool_ip": "10.10.10.100",
    "delegate_ip": "10.10.10.104"
} 

[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Install PostgreSQL] ******************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for localhost

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [localhost]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [localhost]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [localhost]

TASK [Download the PGDG RPM package] *******************************************
ok: [localhost]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [localhost]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [localhost]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=6    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   

Enter PostgreSQL version (Latest: 17): Enter the PostgreSQL port number: (Default: 5432): Enter the Data Directory Path: (Default: /home/postgres/stormatics/pg_cirrus/data): Generating conf.yml ...
Generating inventory file ...

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for PRIMARY

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [PRIMARY]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [PRIMARY]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [PRIMARY]

TASK [Download the PGDG RPM package] *******************************************
ok: [PRIMARY]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [PRIMARY]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [PRIMARY]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [PRIMARY]

TASK [Install PostgreSQL-17] ***************************************************
ok: [PRIMARY]

TASK [Creating data directory] *************************************************
ok: [PRIMARY]

TASK [Stop already running service] ********************************************
skipping: [PRIMARY]

TASK [Installing python3-psycopg2] *********************************************
ok: [PRIMARY]

TASK [Creating password file] **************************************************
ok: [PRIMARY]

TASK [Check if the data directory is empty] ************************************
ok: [PRIMARY]

TASK [Display message and exit if the data directory is not empty] *************
skipping: [PRIMARY]

TASK [Initialize the data directory for the Primary PostgreSQL server] *********
changed: [PRIMARY]

TASK [Append PostgreSQL Configuration] *****************************************
changed: [PRIMARY] => (item=listen_addresses = '*')
changed: [PRIMARY] => (item=wal_level = replica)
changed: [PRIMARY] => (item=max_wal_senders = 10)
changed: [PRIMARY] => (item=wal_keep_size = 1GB)

TASK [Start the server] ********************************************************
changed: [PRIMARY]

TASK [Creating a replication slots] ********************************************
[WARNING]: Database name has not been passed, used default database to connect
to.
ok: [PRIMARY] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
ok: [PRIMARY] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})

TASK [Creating a replication user] *********************************************
changed: [PRIMARY]

TASK [Update pg_hba.conf] ******************************************************
changed: [PRIMARY]

TASK [Restart the server] ******************************************************
changed: [PRIMARY]

TASK [Install pgpool2] *********************************************************
skipping: [PRIMARY]

TASK [Install pgpool-II release RPM] *******************************************
ok: [PRIMARY]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
fatal: [PRIMARY]: FAILED! => {"changed": false, "failures": [], "msg": "Depsolve Error occurred: \n Problem: cannot install the best candidate for the job\n  - nothing provides libmemcached.so.11()(64bit) needed by pgpool-II-pg17-4.5.7-1pgdg.rhel9.x86_64 from pgpool45", "rc": 1, "results": []}

PLAY RECAP *********************************************************************
PRIMARY                    : ok=21   changed=8    unreachable=0    failed=1    skipped=6    rescued=0    ignored=0   

Error: Failed to execute setup-primary.yml playbook.
Exiting pg_cirrus.
Welcome to pg_cirrus - Hassle-free PostgreSQL Cluster Setup


🔁 Loaded configuration from saved_config.json
{
    "vault_password_file": "vault",
    "cluster_subnet": "0.0.0.0/0",
    "primary_ip": "10.10.10.101",
    "standby_ips": [
        "10.10.10.102",
        "10.10.10.103"
    ],
    "pgpool_ip": "10.10.10.100",
    "delegate_ip": "10.10.10.104"
} 

[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Install PostgreSQL] ******************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for localhost

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [localhost]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [localhost]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [localhost]

TASK [Download the PGDG RPM package] *******************************************
ok: [localhost]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [localhost]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [localhost]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=6    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   

Enter PostgreSQL version (Latest: 17): Enter the PostgreSQL port number: (Default: 5432): Enter the Data Directory Path: (Default: /home/postgres/stormatics/pg_cirrus/data): Generating conf.yml ...
Generating inventory file ...

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for PRIMARY

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [PRIMARY]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [PRIMARY]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [PRIMARY]

TASK [Download the PGDG RPM package] *******************************************
ok: [PRIMARY]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [PRIMARY]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [PRIMARY]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [PRIMARY]

TASK [Install PostgreSQL-17] ***************************************************
ok: [PRIMARY]

TASK [Creating data directory] *************************************************
ok: [PRIMARY]

TASK [Stop already running service] ********************************************
skipping: [PRIMARY]

TASK [Installing python3-psycopg2] *********************************************
ok: [PRIMARY]

TASK [Creating password file] **************************************************
ok: [PRIMARY]

TASK [Check if the data directory is empty] ************************************
ok: [PRIMARY]

TASK [Display message and exit if the data directory is not empty] *************
fatal: [PRIMARY]: FAILED! => {"changed": false, "msg": "The data directory '/home/postgres/stormatics/pg_cirrus/data' is not empty."}

PLAY RECAP *********************************************************************
PRIMARY                    : ok=13   changed=2    unreachable=0    failed=1    skipped=4    rescued=0    ignored=0   

Error: Failed to execute setup-primary.yml playbook.
Exiting pg_cirrus.
Welcome to pg_cirrus - Hassle-free PostgreSQL Cluster Setup


🔁 Loaded configuration from saved_config.json
{
    "vault_password_file": "vault",
    "cluster_subnet": "0.0.0.0/0",
    "primary_ip": "10.10.10.101",
    "standby_ips": [
        "10.10.10.102",
        "10.10.10.103"
    ],
    "pgpool_ip": "10.10.10.100",
    "delegate_ip": "10.10.10.104"
} 

[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Install PostgreSQL] ******************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for localhost

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [localhost]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [localhost]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [localhost]

TASK [Download the PGDG RPM package] *******************************************
ok: [localhost]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [localhost]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [localhost]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=6    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   

Enter PostgreSQL version (Latest: 17): Enter the PostgreSQL port number: (Default: 5432): Enter the Data Directory Path: (Default: /home/postgres/stormatics/pg_cirrus/data): Generating conf.yml ...
Generating inventory file ...

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for PRIMARY

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [PRIMARY]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [PRIMARY]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [PRIMARY]

TASK [Download the PGDG RPM package] *******************************************
ok: [PRIMARY]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [PRIMARY]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [PRIMARY]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [PRIMARY]

TASK [Install PostgreSQL-17] ***************************************************
ok: [PRIMARY]

TASK [Creating data directory] *************************************************
ok: [PRIMARY]

TASK [Stop already running service] ********************************************
skipping: [PRIMARY]

TASK [Installing python3-psycopg2] *********************************************
ok: [PRIMARY]

TASK [Creating password file] **************************************************
ok: [PRIMARY]

TASK [Check if the data directory is empty] ************************************
ok: [PRIMARY]

TASK [Display message and exit if the data directory is not empty] *************
skipping: [PRIMARY]

TASK [Initialize the data directory for the Primary PostgreSQL server] *********
changed: [PRIMARY]

TASK [Append PostgreSQL Configuration] *****************************************
changed: [PRIMARY] => (item=listen_addresses = '*')
changed: [PRIMARY] => (item=wal_level = replica)
changed: [PRIMARY] => (item=max_wal_senders = 10)
changed: [PRIMARY] => (item=wal_keep_size = 1GB)

TASK [Start the server] ********************************************************
changed: [PRIMARY]

TASK [Creating a replication slots] ********************************************
[WARNING]: Database name has not been passed, used default database to connect
to.
ok: [PRIMARY] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
ok: [PRIMARY] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})

TASK [Creating a replication user] *********************************************
changed: [PRIMARY]

TASK [Update pg_hba.conf] ******************************************************
changed: [PRIMARY]

TASK [Restart the server] ******************************************************
changed: [PRIMARY]

TASK [Install pgpool2] *********************************************************
skipping: [PRIMARY]

TASK [Install pgpool-II release RPM] *******************************************
ok: [PRIMARY]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
fatal: [PRIMARY]: FAILED! => {"changed": false, "failures": [], "msg": "Depsolve Error occurred: \n Problem: cannot install the best candidate for the job\n  - nothing provides libmemcached.so.11()(64bit) needed by pgpool-II-pg17-4.5.7-1pgdg.rhel9.x86_64 from pgpool45", "rc": 1, "results": []}

PLAY RECAP *********************************************************************
PRIMARY                    : ok=21   changed=8    unreachable=0    failed=1    skipped=6    rescued=0    ignored=0   

Error: Failed to execute setup-primary.yml playbook.
Exiting pg_cirrus.
Welcome to pg_cirrus - Hassle-free PostgreSQL Cluster Setup


🔁 Loaded configuration from saved_config.json
{
    "vault_password_file": "vault",
    "cluster_subnet": "0.0.0.0/0",
    "primary_ip": "10.10.10.101",
    "standby_ips": [
        "10.10.10.102",
        "10.10.10.103"
    ],
    "pgpool_ip": "10.10.10.100",
    "delegate_ip": "10.10.10.104"
} 

[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Install PostgreSQL] ******************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for localhost

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [localhost]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [localhost]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [localhost]

TASK [Download the PGDG RPM package] *******************************************
ok: [localhost]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [localhost]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [localhost]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=6    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   

Enter PostgreSQL version (Latest: 17): Enter the PostgreSQL port number: (Default: 5432): Enter the Data Directory Path: (Default: /home/postgres/stormatics/pg_cirrus/data): Generating conf.yml ...
Generating inventory file ...

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for PRIMARY

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [PRIMARY]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [PRIMARY]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [PRIMARY]

TASK [Download the PGDG RPM package] *******************************************
ok: [PRIMARY]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [PRIMARY]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [PRIMARY]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [PRIMARY]

TASK [Install PostgreSQL-17] ***************************************************
ok: [PRIMARY]

TASK [Creating data directory] *************************************************
ok: [PRIMARY]

TASK [Stop already running service] ********************************************
skipping: [PRIMARY]

TASK [Installing python3-psycopg2] *********************************************
ok: [PRIMARY]

TASK [Creating password file] **************************************************
ok: [PRIMARY]

TASK [Check if the data directory is empty] ************************************
ok: [PRIMARY]

TASK [Display message and exit if the data directory is not empty] *************
skipping: [PRIMARY]

TASK [Initialize the data directory for the Primary PostgreSQL server] *********
changed: [PRIMARY]

TASK [Append PostgreSQL Configuration] *****************************************
changed: [PRIMARY] => (item=listen_addresses = '*')
changed: [PRIMARY] => (item=wal_level = replica)
changed: [PRIMARY] => (item=max_wal_senders = 10)
changed: [PRIMARY] => (item=wal_keep_size = 1GB)

TASK [Start the server] ********************************************************
changed: [PRIMARY]

TASK [Creating a replication slots] ********************************************
[WARNING]: Database name has not been passed, used default database to connect
to.
ok: [PRIMARY] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
ok: [PRIMARY] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})

TASK [Creating a replication user] *********************************************
changed: [PRIMARY]

TASK [Update pg_hba.conf] ******************************************************
changed: [PRIMARY]

TASK [Restart the server] ******************************************************
changed: [PRIMARY]

TASK [Install pgpool2] *********************************************************
skipping: [PRIMARY]

TASK [Install pgpool-II release RPM] *******************************************
ok: [PRIMARY]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
changed: [PRIMARY]

TASK [Change permissions, owner, and group of the pcp.conf file] ***************
ok: [PRIMARY]

TASK [Add user and password to pcp.conf] ***************************************
changed: [PRIMARY]

TASK [Stopping pgpool2 service] ************************************************
ok: [PRIMARY]

TASK [Creating pcppass file] ***************************************************
changed: [PRIMARY]

TASK [Creating .pgpass file] ***************************************************
changed: [PRIMARY]

PLAY RECAP *********************************************************************
PRIMARY                    : ok=27   changed=12   unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   


PLAY [Setup Standby servers] ***************************************************

TASK [Gathering Facts] *********************************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Load common variables] ***************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Load vault variables] ****************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for STANDBY1, STANDBY2

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Download the PGDG RPM package] *******************************************
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
fatal: [STANDBY2]: FAILED! => {"changed": true, "cmd": ["yum", "makecache"], "delta": "0:11:39.256149", "end": "2025-08-07 09:08:47.103548", "msg": "non-zero return code", "rc": -15, "start": "2025-08-07 08:57:07.847399", "stderr": "Importing GPG key 0x08B40D20:\n Userid     : \"PostgreSQL RPM Repository <pgsql-pkg-yum@lists.postgresql.org>\"\n Fingerprint: D4BF 08AE 67A0 B4C7 A1DB CCD2 40BC A2B4 08B4 0D20\n From       : /etc/pki/rpm-gpg/PGDG-RPM-GPG-KEY-RHEL", "stderr_lines": ["Importing GPG key 0x08B40D20:", " Userid     : \"PostgreSQL RPM Repository <pgsql-pkg-yum@lists.postgresql.org>\"", " Fingerprint: D4BF 08AE 67A0 B4C7 A1DB CCD2 40BC A2B4 08B4 0D20", " From       : /etc/pki/rpm-gpg/PGDG-RPM-GPG-KEY-RHEL"], "stdout": "AlmaLinux 9 - AppStream                          26 MB/s |  15 MB     00:00    \nAlmaLinux 9 - BaseOS                             51 MB/s |  17 MB     00:00    \nAlmaLinux 9 - Extras                            241 kB/s |  20 kB     00:00    \nExtra Packages for Enterprise Linux 9 - x86_64   27 MB/s |  20 MB     00:00    \nExtra Packages for Enterprise Linux 9 openh264  9.5 kB/s | 2.5 kB     00:00    \nPostgreSQL common RPMs for RHEL / Rocky / AlmaL 8.8 kB/s | 659  B     00:00    \nPostgreSQL common RPMs for RHEL / Rocky / AlmaL 2.4 MB/s | 2.4 kB     00:00    \nIs this ok [y/N]: ", "stdout_lines": ["AlmaLinux 9 - AppStream                          26 MB/s |  15 MB     00:00    ", "AlmaLinux 9 - BaseOS                             51 MB/s |  17 MB     00:00    ", "AlmaLinux 9 - Extras                            241 kB/s |  20 kB     00:00    ", "Extra Packages for Enterprise Linux 9 - x86_64   27 MB/s |  20 MB     00:00    ", "Extra Packages for Enterprise Linux 9 openh264  9.5 kB/s | 2.5 kB     00:00    ", "PostgreSQL common RPMs for RHEL / Rocky / AlmaL 8.8 kB/s | 659  B     00:00    ", "PostgreSQL common RPMs for RHEL / Rocky / AlmaL 2.4 MB/s | 2.4 kB     00:00    ", "Is this ok [y/N]: "]}
fatal: [STANDBY1]: FAILED! => {"changed": true, "cmd": ["yum", "makecache"], "delta": "0:11:52.729074", "end": "2025-08-07 09:09:00.563402", "msg": "non-zero return code", "rc": -15, "start": "2025-08-07 08:57:07.834328", "stderr": "Importing GPG key 0x08B40D20:\n Userid     : \"PostgreSQL RPM Repository <pgsql-pkg-yum@lists.postgresql.org>\"\n Fingerprint: D4BF 08AE 67A0 B4C7 A1DB CCD2 40BC A2B4 08B4 0D20\n From       : /etc/pki/rpm-gpg/PGDG-RPM-GPG-KEY-RHEL", "stderr_lines": ["Importing GPG key 0x08B40D20:", " Userid     : \"PostgreSQL RPM Repository <pgsql-pkg-yum@lists.postgresql.org>\"", " Fingerprint: D4BF 08AE 67A0 B4C7 A1DB CCD2 40BC A2B4 08B4 0D20", " From       : /etc/pki/rpm-gpg/PGDG-RPM-GPG-KEY-RHEL"], "stdout": "AlmaLinux 9 - AppStream                          40 MB/s |  15 MB     00:00    \nAlmaLinux 9 - BaseOS                             54 MB/s |  17 MB     00:00    \nAlmaLinux 9 - Extras                            263 kB/s |  20 kB     00:00    \nExtra Packages for Enterprise Linux 9 - x86_64   31 MB/s |  20 MB     00:00    \nExtra Packages for Enterprise Linux 9 openh264  9.3 kB/s | 2.5 kB     00:00    \nPostgreSQL common RPMs for RHEL / Rocky / AlmaL 5.8 kB/s | 659  B     00:00    \nPostgreSQL common RPMs for RHEL / Rocky / AlmaL 2.4 MB/s | 2.4 kB     00:00    \nIs this ok [y/N]: ", "stdout_lines": ["AlmaLinux 9 - AppStream                          40 MB/s |  15 MB     00:00    ", "AlmaLinux 9 - BaseOS                             54 MB/s |  17 MB     00:00    ", "AlmaLinux 9 - Extras                            263 kB/s |  20 kB     00:00    ", "Extra Packages for Enterprise Linux 9 - x86_64   31 MB/s |  20 MB     00:00    ", "Extra Packages for Enterprise Linux 9 openh264  9.3 kB/s | 2.5 kB     00:00    ", "PostgreSQL common RPMs for RHEL / Rocky / AlmaL 5.8 kB/s | 659  B     00:00    ", "PostgreSQL common RPMs for RHEL / Rocky / AlmaL 2.4 MB/s | 2.4 kB     00:00    ", "Is this ok [y/N]: "]}

PLAY RECAP *********************************************************************
STANDBY1                   : ok=7    changed=3    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0   
STANDBY2                   : ok=7    changed=3    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0   

Error: Failed to execute setup-standby.yml playbook.
Exiting pg_cirrus.
Welcome to pg_cirrus - Hassle-free PostgreSQL Cluster Setup


🔁 Loaded configuration from saved_config.json
{
    "vault_password_file": "vault",
    "cluster_subnet": "0.0.0.0/0",
    "primary_ip": "10.10.10.101",
    "standby_ips": [
        "10.10.10.102",
        "10.10.10.103"
    ],
    "pgpool_ip": "10.10.10.100",
    "delegate_ip": "10.10.10.104"
} 

[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Install PostgreSQL] ******************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for localhost

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [localhost]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [localhost]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [localhost]

TASK [Download the PGDG RPM package] *******************************************
ok: [localhost]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [localhost]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [localhost]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=6    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   

Enter PostgreSQL version (Latest: 17): Enter the PostgreSQL port number: (Default: 5432): Enter the Data Directory Path: (Default: /home/postgres/stormatics/pg_cirrus/data): Generating conf.yml ...
Generating inventory file ...

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for PRIMARY

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [PRIMARY]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [PRIMARY]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [PRIMARY]

TASK [Download the PGDG RPM package] *******************************************
ok: [PRIMARY]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [PRIMARY]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [PRIMARY]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [PRIMARY]

TASK [Install PostgreSQL-17] ***************************************************
ok: [PRIMARY]

TASK [Creating data directory] *************************************************
ok: [PRIMARY]

TASK [Stop already running service] ********************************************
skipping: [PRIMARY]

TASK [Installing python3-psycopg2] *********************************************
ok: [PRIMARY]

TASK [Creating password file] **************************************************
ok: [PRIMARY]

TASK [Check if the data directory is empty] ************************************
ok: [PRIMARY]

TASK [Display message and exit if the data directory is not empty] *************
skipping: [PRIMARY]

TASK [Initialize the data directory for the Primary PostgreSQL server] *********
changed: [PRIMARY]

TASK [Append PostgreSQL Configuration] *****************************************
changed: [PRIMARY] => (item=listen_addresses = '*')
changed: [PRIMARY] => (item=wal_level = replica)
changed: [PRIMARY] => (item=max_wal_senders = 10)
changed: [PRIMARY] => (item=wal_keep_size = 1GB)

TASK [Start the server] ********************************************************
changed: [PRIMARY]

TASK [Creating a replication slots] ********************************************
[WARNING]: Database name has not been passed, used default database to connect
to.
ok: [PRIMARY] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
ok: [PRIMARY] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})

TASK [Creating a replication user] *********************************************
changed: [PRIMARY]

TASK [Update pg_hba.conf] ******************************************************
changed: [PRIMARY]

TASK [Restart the server] ******************************************************
changed: [PRIMARY]

TASK [Install pgpool2] *********************************************************
skipping: [PRIMARY]

TASK [Install pgpool-II release RPM] *******************************************
ok: [PRIMARY]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
ok: [PRIMARY]

TASK [Change permissions, owner, and group of the pcp.conf file] ***************
ok: [PRIMARY]

TASK [Add user and password to pcp.conf] ***************************************
changed: [PRIMARY]

TASK [Stopping pgpool2 service] ************************************************
ok: [PRIMARY]

TASK [Creating pcppass file] ***************************************************
ok: [PRIMARY]

TASK [Creating .pgpass file] ***************************************************
ok: [PRIMARY]

PLAY RECAP *********************************************************************
PRIMARY                    : ok=27   changed=9    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   


PLAY [Setup Standby servers] ***************************************************

TASK [Gathering Facts] *********************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Load common variables] ***************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Load vault variables] ****************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for STANDBY1, STANDBY2

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Download the PGDG RPM package] *******************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Install PostgreSQL-17] ***************************************************
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Create data directory] ***************************************************
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Set permissions for data directory] **************************************
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Stop already running service] ********************************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Creating .pgpass file] ***************************************************
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Check if the data directory is empty] ************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Display error message and exit if the directory is not empty] ************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Run pg_basebackup for standby servers] ***********************************
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Update primary_slot_name in postgresql.conf] *****************************
skipping: [STANDBY2] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'}) 
changed: [STANDBY1] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
skipping: [STANDBY1] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'}) 
changed: [STANDBY2] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})

TASK [Start the standby server] ************************************************
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Install pgpool2] *********************************************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Install pgpool-II release RPM] *******************************************
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
fatal: [STANDBY2]: FAILED! => {"changed": false, "failures": [], "msg": "Depsolve Error occurred: \n Problem: cannot install the best candidate for the job\n  - nothing provides libmemcached.so.11()(64bit) needed by pgpool-II-pg17-4.5.7-1pgdg.rhel9.x86_64 from pgpool45", "rc": 1, "results": []}
fatal: [STANDBY1]: FAILED! => {"changed": false, "failures": [], "msg": "Depsolve Error occurred: \n Problem: cannot install the best candidate for the job\n  - nothing provides libmemcached.so.11()(64bit) needed by pgpool-II-pg17-4.5.7-1pgdg.rhel9.x86_64 from pgpool45", "rc": 1, "results": []}

PLAY RECAP *********************************************************************
STANDBY1                   : ok=17   changed=10   unreachable=0    failed=1    skipped=6    rescued=0    ignored=0   
STANDBY2                   : ok=17   changed=10   unreachable=0    failed=1    skipped=6    rescued=0    ignored=0   

Error: Failed to execute setup-standby.yml playbook.
Exiting pg_cirrus.
Welcome to pg_cirrus - Hassle-free PostgreSQL Cluster Setup


🔁 Loaded configuration from saved_config.json
{
    "vault_password_file": "vault",
    "cluster_subnet": "0.0.0.0/0",
    "primary_ip": "10.10.10.101",
    "standby_ips": [
        "10.10.10.102",
        "10.10.10.103"
    ],
    "pgpool_ip": "10.10.10.100",
    "delegate_ip": "10.10.10.104"
} 

[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Install PostgreSQL] ******************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for localhost

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [localhost]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [localhost]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [localhost]

TASK [Download the PGDG RPM package] *******************************************
ok: [localhost]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [localhost]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [localhost]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=6    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   

Enter PostgreSQL version (Latest: 17): Enter the PostgreSQL port number: (Default: 5432): Enter the Data Directory Path: (Default: /home/postgres/stormatics/pg_cirrus/data): Generating conf.yml ...
Generating inventory file ...

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for PRIMARY

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [PRIMARY]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [PRIMARY]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [PRIMARY]

TASK [Download the PGDG RPM package] *******************************************
ok: [PRIMARY]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [PRIMARY]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [PRIMARY]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [PRIMARY]

TASK [Install PostgreSQL-17] ***************************************************
ok: [PRIMARY]

TASK [Creating data directory] *************************************************
ok: [PRIMARY]

TASK [Stop already running service] ********************************************
skipping: [PRIMARY]

TASK [Installing python3-psycopg2] *********************************************
ok: [PRIMARY]

TASK [Creating password file] **************************************************
ok: [PRIMARY]

TASK [Check if the data directory is empty] ************************************
ok: [PRIMARY]

TASK [Display message and exit if the data directory is not empty] *************
skipping: [PRIMARY]

TASK [Initialize the data directory for the Primary PostgreSQL server] *********
changed: [PRIMARY]

TASK [Append PostgreSQL Configuration] *****************************************
changed: [PRIMARY] => (item=listen_addresses = '*')
changed: [PRIMARY] => (item=wal_level = replica)
changed: [PRIMARY] => (item=max_wal_senders = 10)
changed: [PRIMARY] => (item=wal_keep_size = 1GB)

TASK [Start the server] ********************************************************
changed: [PRIMARY]

TASK [Creating a replication slots] ********************************************
[WARNING]: Database name has not been passed, used default database to connect
to.
ok: [PRIMARY] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
ok: [PRIMARY] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})

TASK [Creating a replication user] *********************************************
changed: [PRIMARY]

TASK [Update pg_hba.conf] ******************************************************
changed: [PRIMARY]

TASK [Restart the server] ******************************************************
changed: [PRIMARY]

TASK [Install pgpool2] *********************************************************
skipping: [PRIMARY]

TASK [Install pgpool-II release RPM] *******************************************
ok: [PRIMARY]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
ok: [PRIMARY]

TASK [Change permissions, owner, and group of the pcp.conf file] ***************
ok: [PRIMARY]

TASK [Add user and password to pcp.conf] ***************************************
changed: [PRIMARY]

TASK [Stopping pgpool2 service] ************************************************
ok: [PRIMARY]

TASK [Creating pcppass file] ***************************************************
ok: [PRIMARY]

TASK [Creating .pgpass file] ***************************************************
ok: [PRIMARY]

PLAY RECAP *********************************************************************
PRIMARY                    : ok=27   changed=9    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   


PLAY [Setup Standby servers] ***************************************************

TASK [Gathering Facts] *********************************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Load common variables] ***************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Load vault variables] ****************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for STANDBY1, STANDBY2

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Download the PGDG RPM package] *******************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Install PostgreSQL-17] ***************************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Create data directory] ***************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Set permissions for data directory] **************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Stop already running service] ********************************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Creating .pgpass file] ***************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Check if the data directory is empty] ************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Display error message and exit if the directory is not empty] ************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Run pg_basebackup for standby servers] ***********************************
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Update primary_slot_name in postgresql.conf] *****************************
skipping: [STANDBY2] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'}) 
changed: [STANDBY2] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})
changed: [STANDBY1] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
skipping: [STANDBY1] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'}) 

TASK [Start the standby server] ************************************************
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Install pgpool2] *********************************************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Install pgpool-II release RPM] *******************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Change permissions, owner, and group of the pcp.conf file] ***************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Add user and password to pcp.conf] ***************************************
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Stopping pgpool2 service] ************************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Creating pcppass file] ***************************************************
changed: [STANDBY2]
changed: [STANDBY1]

PLAY RECAP *********************************************************************
STANDBY1                   : ok=22   changed=8    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
STANDBY2                   : ok=22   changed=8    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   


PLAY [Configure pgpool2] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Install pgpool2] *********************************************************
skipping: [PRIMARY]
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Install pgpool-II release RPM] *******************************************
ok: [PRIMARY]
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
ok: [PRIMARY]
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Create pgpool_logs directory in /var/log/] *******************************
changed: [STANDBY1]
changed: [STANDBY2]
changed: [PRIMARY]

TASK [Ensure pgpool.conf settings are present and not duplicated] **************
changed: [STANDBY2] => (item=listen_addresses = '*')
changed: [PRIMARY] => (item=listen_addresses = '*')
changed: [STANDBY1] => (item=listen_addresses = '*')
changed: [STANDBY2] => (item=port = 9999)
changed: [STANDBY1] => (item=port = 9999)
changed: [PRIMARY] => (item=port = 9999)
changed: [STANDBY2] => (item=log_statement = on)
changed: [PRIMARY] => (item=log_statement = on)
changed: [STANDBY1] => (item=log_statement = on)
changed: [STANDBY2] => (item=log_per_node_statement = on)
changed: [PRIMARY] => (item=log_per_node_statement = on)
changed: [STANDBY1] => (item=log_per_node_statement = on)
changed: [STANDBY2] => (item=sr_check_user = 'repuser')
changed: [PRIMARY] => (item=sr_check_user = 'repuser')
changed: [STANDBY1] => (item=sr_check_user = 'repuser')
changed: [STANDBY2] => (item=health_check_period = 10)
changed: [PRIMARY] => (item=health_check_period = 10)
changed: [STANDBY1] => (item=health_check_period = 10)
changed: [STANDBY2] => (item=health_check_user = 'repuser')
changed: [STANDBY1] => (item=health_check_user = 'repuser')
changed: [PRIMARY] => (item=health_check_user = 'repuser')
changed: [STANDBY2] => (item=pool_passwd = '/etc/pgpool-II/pool_passwd')
changed: [PRIMARY] => (item=pool_passwd = '/etc/pgpool-II/pool_passwd')
changed: [STANDBY1] => (item=pool_passwd = '/etc/pgpool-II/pool_passwd')
changed: [STANDBY2] => (item=sr_check_password = '')
changed: [PRIMARY] => (item=sr_check_password = '')
changed: [STANDBY1] => (item=sr_check_password = '')
changed: [STANDBY2] => (item=health_check_password = '')
changed: [PRIMARY] => (item=health_check_password = '')
changed: [STANDBY1] => (item=health_check_password = '')
changed: [STANDBY2] => (item=backend_hostname0 = '10.10.10.101')
changed: [PRIMARY] => (item=backend_hostname0 = '10.10.10.101')
changed: [STANDBY1] => (item=backend_hostname0 = '10.10.10.101')
changed: [STANDBY2] => (item=backend_hostname1 = '10.10.10.102')
changed: [PRIMARY] => (item=backend_hostname1 = '10.10.10.102')
changed: [STANDBY1] => (item=backend_hostname1 = '10.10.10.102')
changed: [STANDBY2] => (item=backend_port0 = 5432)
changed: [PRIMARY] => (item=backend_port0 = 5432)
changed: [STANDBY1] => (item=backend_port0 = 5432)
changed: [STANDBY2] => (item=backend_port1 = 5432)
changed: [PRIMARY] => (item=backend_port1 = 5432)
changed: [STANDBY1] => (item=backend_port1 = 5432)
changed: [STANDBY2] => (item=backend_weight0 = 0)
changed: [PRIMARY] => (item=backend_weight0 = 0)
changed: [STANDBY1] => (item=backend_weight0 = 0)
changed: [STANDBY2] => (item=backend_weight1 = 0.5)
changed: [PRIMARY] => (item=backend_weight1 = 0.5)
changed: [STANDBY1] => (item=backend_weight1 = 0.5)
changed: [STANDBY2] => (item=backend_data_directory0 = '/home/postgres/stormatics/pg_cirrus/data')
changed: [PRIMARY] => (item=backend_data_directory0 = '/home/postgres/stormatics/pg_cirrus/data')
changed: [STANDBY1] => (item=backend_data_directory0 = '/home/postgres/stormatics/pg_cirrus/data')
changed: [STANDBY2] => (item=backend_data_directory1 = '/home/postgres/stormatics/pg_cirrus/data')
changed: [PRIMARY] => (item=backend_data_directory1 = '/home/postgres/stormatics/pg_cirrus/data')
changed: [STANDBY1] => (item=backend_data_directory1 = '/home/postgres/stormatics/pg_cirrus/data')
changed: [STANDBY2] => (item=backend_flag0 = 'ALLOW_TO_FAILOVER')
changed: [PRIMARY] => (item=backend_flag0 = 'ALLOW_TO_FAILOVER')
changed: [STANDBY1] => (item=backend_flag0 = 'ALLOW_TO_FAILOVER')
changed: [STANDBY2] => (item=backend_flag1 = 'ALLOW_TO_FAILOVER')
changed: [PRIMARY] => (item=backend_flag1 = 'ALLOW_TO_FAILOVER')
changed: [STANDBY1] => (item=backend_flag1 = 'ALLOW_TO_FAILOVER')
changed: [STANDBY2] => (item=failover_command ='/home/postgres/stormatics/pg_cirrus/failover.sh %d %h %p %D %m %H %M %P %r %R %N %S 17 5432')
changed: [PRIMARY] => (item=failover_command ='/home/postgres/stormatics/pg_cirrus/failover.sh %d %h %p %D %m %H %M %P %r %R %N %S 17 5432')
changed: [STANDBY2] => (item=follow_primary_command = '/home/postgres/stormatics/pg_cirrus/follow_primary.sh %d %h %p %D %m %H %M %P %r %R %N %S 5432 10.10.10.100')
changed: [STANDBY1] => (item=failover_command ='/home/postgres/stormatics/pg_cirrus/failover.sh %d %h %p %D %m %H %M %P %r %R %N %S 17 5432')
changed: [PRIMARY] => (item=follow_primary_command = '/home/postgres/stormatics/pg_cirrus/follow_primary.sh %d %h %p %D %m %H %M %P %r %R %N %S 5432 10.10.10.100')
changed: [STANDBY1] => (item=follow_primary_command = '/home/postgres/stormatics/pg_cirrus/follow_primary.sh %d %h %p %D %m %H %M %P %r %R %N %S 5432 10.10.10.100')
changed: [STANDBY2] => (item=load_balance_mode = on)
changed: [PRIMARY] => (item=load_balance_mode = on)
changed: [STANDBY1] => (item=load_balance_mode = on)
changed: [STANDBY2] => (item=database_redirect_preference_list = '.*:standby')
changed: [PRIMARY] => (item=database_redirect_preference_list = '.*:standby')
changed: [STANDBY1] => (item=database_redirect_preference_list = '.*:standby')
changed: [STANDBY2] => (item=statement_level_load_balance = on)
changed: [PRIMARY] => (item=statement_level_load_balance = on)
changed: [STANDBY1] => (item=statement_level_load_balance = on)
changed: [STANDBY2] => (item=pcp_listen_addresses = '*')
changed: [PRIMARY] => (item=pcp_listen_addresses = '*')
changed: [STANDBY1] => (item=pcp_listen_addresses = '*')
changed: [STANDBY2] => (item=pcp_port = 9898)
changed: [PRIMARY] => (item=pcp_port = 9898)
changed: [STANDBY1] => (item=pcp_port = 9898)
changed: [STANDBY2] => (item=log_destination = 'stderr,syslog')
changed: [PRIMARY] => (item=log_destination = 'stderr,syslog')
changed: [STANDBY1] => (item=log_destination = 'stderr,syslog')
ok: [STANDBY2] => (item=logging_collector = on)
ok: [PRIMARY] => (item=logging_collector = on)
ok: [STANDBY1] => (item=logging_collector = on)
changed: [STANDBY2] => (item=log_directory = '/var/log/pgpool_logs')
changed: [PRIMARY] => (item=log_directory = '/var/log/pgpool_logs')
changed: [STANDBY1] => (item=log_directory = '/var/log/pgpool_logs')
changed: [STANDBY2] => (item=log_filename = 'pgpool-%Y-%m-%d_%H%M%S.log')
changed: [PRIMARY] => (item=log_filename = 'pgpool-%Y-%m-%d_%H%M%S.log')
changed: [STANDBY1] => (item=log_filename = 'pgpool-%Y-%m-%d_%H%M%S.log')
changed: [STANDBY2] => (item=log_file_mode = 0600)
changed: [PRIMARY] => (item=log_file_mode = 0600)
changed: [STANDBY1] => (item=log_file_mode = 0600)
changed: [STANDBY2] => (item=use_watchdog = on)
changed: [PRIMARY] => (item=use_watchdog = on)
changed: [STANDBY1] => (item=use_watchdog = on)
changed: [STANDBY2] => (item=hostname0 = '10.10.10.101')
changed: [PRIMARY] => (item=hostname0 = '10.10.10.101')
changed: [STANDBY1] => (item=hostname0 = '10.10.10.101')
changed: [STANDBY2] => (item=wd_port0 = 9000)
changed: [PRIMARY] => (item=wd_port0 = 9000)
changed: [STANDBY1] => (item=wd_port0 = 9000)
changed: [STANDBY2] => (item=pgpool_port0 = 9999)
changed: [PRIMARY] => (item=pgpool_port0 = 9999)
changed: [STANDBY1] => (item=pgpool_port0 = 9999)
changed: [STANDBY2] => (item=hostname1 = '10.10.10.102')
changed: [PRIMARY] => (item=hostname1 = '10.10.10.102')
changed: [STANDBY1] => (item=hostname1 = '10.10.10.102')
changed: [STANDBY2] => (item=wd_port1 = 9000)
changed: [PRIMARY] => (item=wd_port1 = 9000)
changed: [STANDBY1] => (item=wd_port1 = 9000)
changed: [STANDBY2] => (item=pgpool_port1 = 9999)
changed: [PRIMARY] => (item=pgpool_port1 = 9999)
changed: [STANDBY1] => (item=pgpool_port1 = 9999)
changed: [STANDBY2] => (item=hostname2 = '10.10.10.103')
changed: [PRIMARY] => (item=hostname2 = '10.10.10.103')
changed: [STANDBY1] => (item=hostname2 = '10.10.10.103')
changed: [STANDBY2] => (item=wd_port2 = 9000)
changed: [PRIMARY] => (item=wd_port2 = 9000)
changed: [STANDBY1] => (item=wd_port2 = 9000)
changed: [STANDBY2] => (item=pgpool_port2 = 9999)
changed: [PRIMARY] => (item=pgpool_port2 = 9999)
changed: [STANDBY1] => (item=pgpool_port2 = 9999)
changed: [STANDBY2] => (item=wd_priority = 1)
changed: [PRIMARY] => (item=wd_priority = 1)
changed: [STANDBY1] => (item=wd_priority = 1)
changed: [STANDBY2] => (item=wd_authkey = 'secretkey')
changed: [PRIMARY] => (item=wd_authkey = 'secretkey')
changed: [STANDBY1] => (item=wd_authkey = 'secretkey')
changed: [STANDBY2] => (item=wd_monitoring_interfaces_list = 'eth0')
changed: [PRIMARY] => (item=wd_monitoring_interfaces_list = 'eth0')
changed: [STANDBY1] => (item=wd_monitoring_interfaces_list = 'eth0')
changed: [STANDBY2] => (item=heartbeat_hostname0 = '10.10.10.102')
changed: [PRIMARY] => (item=heartbeat_hostname0 = '10.10.10.102')
changed: [STANDBY2] => (item=heartbeat_port0 = 9694)
changed: [STANDBY1] => (item=heartbeat_hostname0 = '10.10.10.102')
changed: [PRIMARY] => (item=heartbeat_port0 = 9694)
changed: [STANDBY2] => (item=heartbeat_device0 = 'eth0')
changed: [STANDBY1] => (item=heartbeat_port0 = 9694)
changed: [PRIMARY] => (item=heartbeat_device0 = 'eth0')
changed: [STANDBY1] => (item=heartbeat_device0 = 'eth0')
changed: [STANDBY2] => (item=heartbeat_hostname1 = '10.10.10.103')
changed: [PRIMARY] => (item=heartbeat_hostname1 = '10.10.10.103')
changed: [STANDBY1] => (item=heartbeat_hostname1 = '10.10.10.103')
changed: [STANDBY2] => (item=heartbeat_port1 = 9694)
changed: [PRIMARY] => (item=heartbeat_port1 = 9694)
changed: [STANDBY1] => (item=heartbeat_port1 = 9694)
changed: [STANDBY2] => (item=heartbeat_device1 = 'eth0')
changed: [PRIMARY] => (item=heartbeat_device1 = 'eth0')
changed: [STANDBY1] => (item=heartbeat_device1 = 'eth0')
changed: [STANDBY2] => (item=heartbeat_hostname2 = '10.10.10.101')
changed: [PRIMARY] => (item=heartbeat_hostname2 = '10.10.10.101')
changed: [STANDBY1] => (item=heartbeat_hostname2 = '10.10.10.101')
changed: [STANDBY2] => (item=heartbeat_port2 = 9694)
changed: [PRIMARY] => (item=heartbeat_port2 = 9694)
changed: [STANDBY1] => (item=heartbeat_port2 = 9694)
changed: [STANDBY2] => (item=heartbeat_device2 = 'eth0')
changed: [PRIMARY] => (item=heartbeat_device2 = 'eth0')
changed: [STANDBY1] => (item=heartbeat_device2 = 'eth0')
changed: [STANDBY2] => (item=wd_heartbeat_keepalive = 2)
changed: [PRIMARY] => (item=wd_heartbeat_keepalive = 2)
changed: [STANDBY1] => (item=wd_heartbeat_keepalive = 2)
changed: [STANDBY2] => (item=wd_heartbeat_deadtime = 10)
changed: [PRIMARY] => (item=wd_heartbeat_deadtime = 10)
changed: [STANDBY2] => (item=delegate_IP = '10.10.10.104')
changed: [STANDBY1] => (item=wd_heartbeat_deadtime = 10)
changed: [PRIMARY] => (item=delegate_IP = '10.10.10.104')
changed: [STANDBY2] => (item=enable_consensus_with_half_votes = off)
changed: [STANDBY1] => (item=delegate_IP = '10.10.10.104')
changed: [PRIMARY] => (item=enable_consensus_with_half_votes = off)
changed: [STANDBY1] => (item=enable_consensus_with_half_votes = off)

TASK [Search for existing standby2 in pgpool.conf] *****************************
changed: [STANDBY1]
changed: [STANDBY2]
changed: [PRIMARY]

TASK [Add configurations for standby2 to pgpool.conf if not already present] ***
changed: [STANDBY1]
changed: [STANDBY2]
changed: [PRIMARY]

TASK [Change permissions, owner, and group of the pcp.conf file] ***************
ok: [STANDBY1]
ok: [PRIMARY]
ok: [STANDBY2]

TASK [Add user and password to pcp.conf] ***************************************
changed: [PRIMARY]
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Create a pool_passwd file] ***********************************************
changed: [STANDBY2]
changed: [PRIMARY]
changed: [STANDBY1]

TASK [Ensure PostgreSQL socket directory exists] *******************************
changed: [PRIMARY]
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Stopping the already running pgpool2 service] ****************************
ok: [PRIMARY]
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Create pgpool_node_id file based on role] ********************************
fatal: [STANDBY2]: FAILED! => {"changed": false, "checksum": "7448d8798a4380162d4b56f9b452e2f6f9e24e7a", "msg": "Destination directory /etc/pgpool2 does not exist"}
fatal: [STANDBY1]: FAILED! => {"changed": false, "checksum": "e5fa44f2b31c1fb553b6021e7360d07d5d91ff5e", "msg": "Destination directory /etc/pgpool2 does not exist"}
fatal: [PRIMARY]: FAILED! => {"changed": false, "checksum": "09d2af8dd22201dd8d48e5dcfcaed281ff9422c7", "msg": "Destination directory /etc/pgpool2 does not exist"}

PLAY RECAP *********************************************************************
PRIMARY                    : ok=14   changed=7    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
STANDBY1                   : ok=14   changed=7    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
STANDBY2                   : ok=14   changed=7    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   

Error: Failed to execute setup-pgpool.yml playbook.
Exiting pg_cirrus.
Welcome to pg_cirrus - Hassle-free PostgreSQL Cluster Setup


🔁 Loaded configuration from saved_config.json
{
    "vault_password_file": "vault",
    "cluster_subnet": "0.0.0.0/0",
    "primary_ip": "10.10.10.101",
    "standby_ips": [
        "10.10.10.102",
        "10.10.10.103"
    ],
    "pgpool_ip": "10.10.10.100",
    "delegate_ip": "10.10.10.104"
} 

[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Install PostgreSQL] ******************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for localhost

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [localhost]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [localhost]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [localhost]

TASK [Download the PGDG RPM package] *******************************************
ok: [localhost]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [localhost]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [localhost]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=6    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   

Enter PostgreSQL version (Latest: 17): Enter the PostgreSQL port number: (Default: 5432): Enter the Data Directory Path: (Default: /home/postgres/stormatics/pg_cirrus/data): Generating conf.yml ...
Generating inventory file ...

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for PRIMARY

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [PRIMARY]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [PRIMARY]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [PRIMARY]

TASK [Download the PGDG RPM package] *******************************************
ok: [PRIMARY]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [PRIMARY]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [PRIMARY]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [PRIMARY]

TASK [Install PostgreSQL-17] ***************************************************
ok: [PRIMARY]

TASK [Creating data directory] *************************************************
ok: [PRIMARY]

TASK [Stop already running service] ********************************************
skipping: [PRIMARY]

TASK [Installing python3-psycopg2] *********************************************
ok: [PRIMARY]

TASK [Creating password file] **************************************************
ok: [PRIMARY]

TASK [Check if the data directory is empty] ************************************
ok: [PRIMARY]

TASK [Display message and exit if the data directory is not empty] *************
skipping: [PRIMARY]

TASK [Initialize the data directory for the Primary PostgreSQL server] *********
changed: [PRIMARY]

TASK [Append PostgreSQL Configuration] *****************************************
changed: [PRIMARY] => (item=listen_addresses = '*')
changed: [PRIMARY] => (item=wal_level = replica)
changed: [PRIMARY] => (item=max_wal_senders = 10)
changed: [PRIMARY] => (item=wal_keep_size = 1GB)

TASK [Start the server] ********************************************************
changed: [PRIMARY]

TASK [Creating a replication slots] ********************************************
[WARNING]: Database name has not been passed, used default database to connect
to.
ok: [PRIMARY] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
ok: [PRIMARY] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})

TASK [Creating a replication user] *********************************************
changed: [PRIMARY]

TASK [Update pg_hba.conf] ******************************************************
changed: [PRIMARY]

TASK [Restart the server] ******************************************************
changed: [PRIMARY]

TASK [Install pgpool2] *********************************************************
skipping: [PRIMARY]

TASK [Install pgpool-II release RPM] *******************************************
ok: [PRIMARY]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
ok: [PRIMARY]

TASK [Change permissions, owner, and group of the pcp.conf file] ***************
ok: [PRIMARY]

TASK [Add user and password to pcp.conf] ***************************************
changed: [PRIMARY]

TASK [Stopping pgpool2 service] ************************************************
ok: [PRIMARY]

TASK [Creating pcppass file] ***************************************************
ok: [PRIMARY]

TASK [Creating .pgpass file] ***************************************************
ok: [PRIMARY]

PLAY RECAP *********************************************************************
PRIMARY                    : ok=27   changed=9    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   


PLAY [Setup Standby servers] ***************************************************

TASK [Gathering Facts] *********************************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Load common variables] ***************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Load vault variables] ****************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for STANDBY1, STANDBY2

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Download the PGDG RPM package] *******************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Install PostgreSQL-17] ***************************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Create data directory] ***************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Set permissions for data directory] **************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Stop already running service] ********************************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Creating .pgpass file] ***************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Check if the data directory is empty] ************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Display error message and exit if the directory is not empty] ************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Run pg_basebackup for standby servers] ***********************************
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Update primary_slot_name in postgresql.conf] *****************************
skipping: [STANDBY2] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'}) 
changed: [STANDBY1] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
skipping: [STANDBY1] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'}) 
changed: [STANDBY2] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})

TASK [Start the standby server] ************************************************
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Install pgpool2] *********************************************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Install pgpool-II release RPM] *******************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Change permissions, owner, and group of the pcp.conf file] ***************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Add user and password to pcp.conf] ***************************************
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Stopping pgpool2 service] ************************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Creating pcppass file] ***************************************************
ok: [STANDBY1]
ok: [STANDBY2]

PLAY RECAP *********************************************************************
STANDBY1                   : ok=22   changed=6    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
STANDBY2                   : ok=22   changed=6    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   


PLAY [Configure pgpool2] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [STANDBY1]
ok: [PRIMARY]
ok: [STANDBY2]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Load vault variables] ****************************************************
ok: [STANDBY1]
ok: [PRIMARY]
ok: [STANDBY2]

TASK [Install pgpool2] *********************************************************
skipping: [PRIMARY]
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Install pgpool-II release RPM] *******************************************
ok: [STANDBY2]
ok: [STANDBY1]
ok: [PRIMARY]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
ok: [PRIMARY]
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Create pgpool_logs directory in /var/log/] *******************************
ok: [PRIMARY]
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Ensure pgpool.conf settings are present and not duplicated] **************
ok: [PRIMARY] => (item=listen_addresses = '*')
ok: [STANDBY1] => (item=listen_addresses = '*')
ok: [STANDBY2] => (item=listen_addresses = '*')
ok: [PRIMARY] => (item=port = 9999)
ok: [STANDBY2] => (item=port = 9999)
ok: [STANDBY1] => (item=port = 9999)
ok: [PRIMARY] => (item=log_statement = on)
ok: [STANDBY2] => (item=log_statement = on)
ok: [STANDBY1] => (item=log_statement = on)
ok: [STANDBY2] => (item=log_per_node_statement = on)
ok: [PRIMARY] => (item=log_per_node_statement = on)
ok: [STANDBY1] => (item=log_per_node_statement = on)
ok: [STANDBY2] => (item=sr_check_user = 'repuser')
ok: [PRIMARY] => (item=sr_check_user = 'repuser')
ok: [STANDBY1] => (item=sr_check_user = 'repuser')
ok: [PRIMARY] => (item=health_check_period = 10)
ok: [STANDBY2] => (item=health_check_period = 10)
ok: [STANDBY1] => (item=health_check_period = 10)
ok: [PRIMARY] => (item=health_check_user = 'repuser')
ok: [STANDBY2] => (item=health_check_user = 'repuser')
ok: [STANDBY1] => (item=health_check_user = 'repuser')
ok: [PRIMARY] => (item=pool_passwd = '/etc/pgpool-II/pool_passwd')
ok: [STANDBY2] => (item=pool_passwd = '/etc/pgpool-II/pool_passwd')
ok: [STANDBY1] => (item=pool_passwd = '/etc/pgpool-II/pool_passwd')
ok: [STANDBY2] => (item=sr_check_password = '')
ok: [PRIMARY] => (item=sr_check_password = '')
ok: [STANDBY1] => (item=sr_check_password = '')
ok: [STANDBY2] => (item=health_check_password = '')
ok: [PRIMARY] => (item=health_check_password = '')
ok: [STANDBY1] => (item=health_check_password = '')
ok: [STANDBY2] => (item=backend_hostname0 = '10.10.10.101')
ok: [PRIMARY] => (item=backend_hostname0 = '10.10.10.101')
ok: [STANDBY1] => (item=backend_hostname0 = '10.10.10.101')
ok: [STANDBY2] => (item=backend_hostname1 = '10.10.10.102')
ok: [PRIMARY] => (item=backend_hostname1 = '10.10.10.102')
ok: [STANDBY1] => (item=backend_hostname1 = '10.10.10.102')
ok: [STANDBY2] => (item=backend_port0 = 5432)
ok: [PRIMARY] => (item=backend_port0 = 5432)
ok: [STANDBY1] => (item=backend_port0 = 5432)
ok: [STANDBY2] => (item=backend_port1 = 5432)
ok: [PRIMARY] => (item=backend_port1 = 5432)
ok: [STANDBY1] => (item=backend_port1 = 5432)
ok: [STANDBY2] => (item=backend_weight0 = 0)
ok: [PRIMARY] => (item=backend_weight0 = 0)
ok: [STANDBY1] => (item=backend_weight0 = 0)
ok: [STANDBY2] => (item=backend_weight1 = 0.5)
ok: [PRIMARY] => (item=backend_weight1 = 0.5)
ok: [STANDBY1] => (item=backend_weight1 = 0.5)
ok: [STANDBY2] => (item=backend_data_directory0 = '/home/postgres/stormatics/pg_cirrus/data')
ok: [PRIMARY] => (item=backend_data_directory0 = '/home/postgres/stormatics/pg_cirrus/data')
ok: [STANDBY1] => (item=backend_data_directory0 = '/home/postgres/stormatics/pg_cirrus/data')
ok: [STANDBY2] => (item=backend_data_directory1 = '/home/postgres/stormatics/pg_cirrus/data')
ok: [PRIMARY] => (item=backend_data_directory1 = '/home/postgres/stormatics/pg_cirrus/data')
ok: [STANDBY1] => (item=backend_data_directory1 = '/home/postgres/stormatics/pg_cirrus/data')
ok: [STANDBY2] => (item=backend_flag0 = 'ALLOW_TO_FAILOVER')
ok: [PRIMARY] => (item=backend_flag0 = 'ALLOW_TO_FAILOVER')
ok: [STANDBY1] => (item=backend_flag0 = 'ALLOW_TO_FAILOVER')
ok: [STANDBY2] => (item=backend_flag1 = 'ALLOW_TO_FAILOVER')
ok: [PRIMARY] => (item=backend_flag1 = 'ALLOW_TO_FAILOVER')
ok: [STANDBY1] => (item=backend_flag1 = 'ALLOW_TO_FAILOVER')
ok: [PRIMARY] => (item=failover_command ='/home/postgres/stormatics/pg_cirrus/failover.sh %d %h %p %D %m %H %M %P %r %R %N %S 17 5432')
ok: [STANDBY2] => (item=failover_command ='/home/postgres/stormatics/pg_cirrus/failover.sh %d %h %p %D %m %H %M %P %r %R %N %S 17 5432')
ok: [STANDBY1] => (item=failover_command ='/home/postgres/stormatics/pg_cirrus/failover.sh %d %h %p %D %m %H %M %P %r %R %N %S 17 5432')
ok: [PRIMARY] => (item=follow_primary_command = '/home/postgres/stormatics/pg_cirrus/follow_primary.sh %d %h %p %D %m %H %M %P %r %R %N %S 5432 10.10.10.100')
ok: [STANDBY2] => (item=follow_primary_command = '/home/postgres/stormatics/pg_cirrus/follow_primary.sh %d %h %p %D %m %H %M %P %r %R %N %S 5432 10.10.10.100')
ok: [STANDBY1] => (item=follow_primary_command = '/home/postgres/stormatics/pg_cirrus/follow_primary.sh %d %h %p %D %m %H %M %P %r %R %N %S 5432 10.10.10.100')
ok: [PRIMARY] => (item=load_balance_mode = on)
ok: [STANDBY2] => (item=load_balance_mode = on)
ok: [STANDBY1] => (item=load_balance_mode = on)
ok: [PRIMARY] => (item=database_redirect_preference_list = '.*:standby')
ok: [STANDBY2] => (item=database_redirect_preference_list = '.*:standby')
ok: [STANDBY1] => (item=database_redirect_preference_list = '.*:standby')
ok: [PRIMARY] => (item=statement_level_load_balance = on)
ok: [STANDBY2] => (item=statement_level_load_balance = on)
ok: [STANDBY1] => (item=statement_level_load_balance = on)
ok: [PRIMARY] => (item=pcp_listen_addresses = '*')
ok: [STANDBY2] => (item=pcp_listen_addresses = '*')
ok: [STANDBY1] => (item=pcp_listen_addresses = '*')
ok: [STANDBY2] => (item=pcp_port = 9898)
ok: [PRIMARY] => (item=pcp_port = 9898)
ok: [STANDBY1] => (item=pcp_port = 9898)
ok: [PRIMARY] => (item=log_destination = 'stderr,syslog')
ok: [STANDBY2] => (item=log_destination = 'stderr,syslog')
ok: [STANDBY1] => (item=log_destination = 'stderr,syslog')
ok: [STANDBY2] => (item=logging_collector = on)
ok: [PRIMARY] => (item=logging_collector = on)
ok: [STANDBY1] => (item=logging_collector = on)
ok: [STANDBY2] => (item=log_directory = '/var/log/pgpool_logs')
ok: [PRIMARY] => (item=log_directory = '/var/log/pgpool_logs')
ok: [STANDBY1] => (item=log_directory = '/var/log/pgpool_logs')
ok: [STANDBY2] => (item=log_filename = 'pgpool-%Y-%m-%d_%H%M%S.log')
ok: [PRIMARY] => (item=log_filename = 'pgpool-%Y-%m-%d_%H%M%S.log')
ok: [STANDBY1] => (item=log_filename = 'pgpool-%Y-%m-%d_%H%M%S.log')
ok: [STANDBY2] => (item=log_file_mode = 0600)
ok: [PRIMARY] => (item=log_file_mode = 0600)
ok: [STANDBY1] => (item=log_file_mode = 0600)
ok: [STANDBY2] => (item=use_watchdog = on)
ok: [PRIMARY] => (item=use_watchdog = on)
ok: [STANDBY1] => (item=use_watchdog = on)
ok: [STANDBY2] => (item=hostname0 = '10.10.10.101')
ok: [PRIMARY] => (item=hostname0 = '10.10.10.101')
ok: [STANDBY1] => (item=hostname0 = '10.10.10.101')
ok: [STANDBY2] => (item=wd_port0 = 9000)
ok: [PRIMARY] => (item=wd_port0 = 9000)
ok: [STANDBY1] => (item=wd_port0 = 9000)
ok: [STANDBY2] => (item=pgpool_port0 = 9999)
ok: [PRIMARY] => (item=pgpool_port0 = 9999)
ok: [STANDBY1] => (item=pgpool_port0 = 9999)
ok: [STANDBY2] => (item=hostname1 = '10.10.10.102')
ok: [PRIMARY] => (item=hostname1 = '10.10.10.102')
ok: [STANDBY1] => (item=hostname1 = '10.10.10.102')
ok: [STANDBY2] => (item=wd_port1 = 9000)
ok: [PRIMARY] => (item=wd_port1 = 9000)
ok: [STANDBY1] => (item=wd_port1 = 9000)
ok: [STANDBY2] => (item=pgpool_port1 = 9999)
ok: [PRIMARY] => (item=pgpool_port1 = 9999)
ok: [STANDBY1] => (item=pgpool_port1 = 9999)
ok: [STANDBY2] => (item=hostname2 = '10.10.10.103')
ok: [PRIMARY] => (item=hostname2 = '10.10.10.103')
ok: [STANDBY1] => (item=hostname2 = '10.10.10.103')
ok: [STANDBY2] => (item=wd_port2 = 9000)
ok: [PRIMARY] => (item=wd_port2 = 9000)
ok: [STANDBY1] => (item=wd_port2 = 9000)
ok: [STANDBY2] => (item=pgpool_port2 = 9999)
ok: [PRIMARY] => (item=pgpool_port2 = 9999)
ok: [STANDBY1] => (item=pgpool_port2 = 9999)
ok: [STANDBY2] => (item=wd_priority = 1)
ok: [PRIMARY] => (item=wd_priority = 1)
ok: [STANDBY1] => (item=wd_priority = 1)
ok: [STANDBY2] => (item=wd_authkey = 'secretkey')
ok: [PRIMARY] => (item=wd_authkey = 'secretkey')
ok: [STANDBY1] => (item=wd_authkey = 'secretkey')
ok: [STANDBY2] => (item=wd_monitoring_interfaces_list = 'eth0')
ok: [PRIMARY] => (item=wd_monitoring_interfaces_list = 'eth0')
ok: [STANDBY1] => (item=wd_monitoring_interfaces_list = 'eth0')
ok: [STANDBY2] => (item=heartbeat_hostname0 = '10.10.10.102')
ok: [PRIMARY] => (item=heartbeat_hostname0 = '10.10.10.102')
ok: [STANDBY1] => (item=heartbeat_hostname0 = '10.10.10.102')
ok: [STANDBY2] => (item=heartbeat_port0 = 9694)
ok: [PRIMARY] => (item=heartbeat_port0 = 9694)
ok: [STANDBY1] => (item=heartbeat_port0 = 9694)
ok: [STANDBY2] => (item=heartbeat_device0 = 'eth0')
ok: [PRIMARY] => (item=heartbeat_device0 = 'eth0')
ok: [STANDBY1] => (item=heartbeat_device0 = 'eth0')
ok: [STANDBY2] => (item=heartbeat_hostname1 = '10.10.10.103')
ok: [PRIMARY] => (item=heartbeat_hostname1 = '10.10.10.103')
ok: [STANDBY1] => (item=heartbeat_hostname1 = '10.10.10.103')
ok: [STANDBY2] => (item=heartbeat_port1 = 9694)
ok: [PRIMARY] => (item=heartbeat_port1 = 9694)
ok: [STANDBY1] => (item=heartbeat_port1 = 9694)
ok: [STANDBY2] => (item=heartbeat_device1 = 'eth0')
ok: [PRIMARY] => (item=heartbeat_device1 = 'eth0')
ok: [STANDBY1] => (item=heartbeat_device1 = 'eth0')
ok: [STANDBY2] => (item=heartbeat_hostname2 = '10.10.10.101')
ok: [PRIMARY] => (item=heartbeat_hostname2 = '10.10.10.101')
ok: [STANDBY1] => (item=heartbeat_hostname2 = '10.10.10.101')
ok: [STANDBY2] => (item=heartbeat_port2 = 9694)
ok: [PRIMARY] => (item=heartbeat_port2 = 9694)
ok: [STANDBY1] => (item=heartbeat_port2 = 9694)
ok: [PRIMARY] => (item=heartbeat_device2 = 'eth0')
ok: [STANDBY2] => (item=heartbeat_device2 = 'eth0')
ok: [STANDBY1] => (item=heartbeat_device2 = 'eth0')
ok: [PRIMARY] => (item=wd_heartbeat_keepalive = 2)
ok: [STANDBY2] => (item=wd_heartbeat_keepalive = 2)
ok: [STANDBY1] => (item=wd_heartbeat_keepalive = 2)
ok: [PRIMARY] => (item=wd_heartbeat_deadtime = 10)
ok: [STANDBY2] => (item=wd_heartbeat_deadtime = 10)
ok: [STANDBY1] => (item=wd_heartbeat_deadtime = 10)
ok: [PRIMARY] => (item=delegate_IP = '10.10.10.104')
ok: [STANDBY2] => (item=delegate_IP = '10.10.10.104')
ok: [STANDBY1] => (item=delegate_IP = '10.10.10.104')
ok: [PRIMARY] => (item=enable_consensus_with_half_votes = off)
ok: [STANDBY2] => (item=enable_consensus_with_half_votes = off)
ok: [STANDBY1] => (item=enable_consensus_with_half_votes = off)

TASK [Search for existing standby2 in pgpool.conf] *****************************
changed: [STANDBY1]
changed: [STANDBY2]
changed: [PRIMARY]

TASK [Add configurations for standby2 to pgpool.conf if not already present] ***
skipping: [PRIMARY]
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Change permissions, owner, and group of the pcp.conf file] ***************
ok: [PRIMARY]
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Add user and password to pcp.conf] ***************************************
changed: [STANDBY2]
changed: [STANDBY1]
changed: [PRIMARY]

TASK [Create a pool_passwd file] ***********************************************
changed: [STANDBY2]
changed: [PRIMARY]
changed: [STANDBY1]

TASK [Ensure PostgreSQL socket directory exists] *******************************
ok: [STANDBY1]
ok: [PRIMARY]
ok: [STANDBY2]

TASK [Stopping the already running pgpool2 service] ****************************
ok: [PRIMARY]
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Create pgpool_node_id file based on role] ********************************
fatal: [PRIMARY]: FAILED! => {"changed": false, "msg": "dest is required"}
fatal: [STANDBY1]: FAILED! => {"changed": false, "msg": "dest is required"}
fatal: [STANDBY2]: FAILED! => {"changed": false, "msg": "dest is required"}

PLAY RECAP *********************************************************************
PRIMARY                    : ok=13   changed=3    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
STANDBY1                   : ok=13   changed=3    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
STANDBY2                   : ok=13   changed=3    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   

Error: Failed to execute setup-pgpool.yml playbook.
Exiting pg_cirrus.
Welcome to pg_cirrus - Hassle-free PostgreSQL Cluster Setup


🔁 Loaded configuration from saved_config.json
{
    "vault_password_file": "vault",
    "cluster_subnet": "0.0.0.0/0",
    "primary_ip": "10.10.10.101",
    "standby_ips": [
        "10.10.10.102",
        "10.10.10.103"
    ],
    "pgpool_ip": "10.10.10.100",
    "delegate_ip": "10.10.10.104"
} 

[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [Install PostgreSQL] ******************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for localhost

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [localhost]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [localhost]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [localhost]

TASK [Download the PGDG RPM package] *******************************************
ok: [localhost]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [localhost]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [localhost]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=6    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   

Enter PostgreSQL version (Latest: 17): Enter the PostgreSQL port number: (Default: 5432): Enter the Data Directory Path: (Default: /home/postgres/stormatics/pg_cirrus/data): Generating conf.yml ...
Generating inventory file ...

PLAY [Configure PostgreSQL primary server] *************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for PRIMARY

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [PRIMARY]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [PRIMARY]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [PRIMARY]

TASK [Download the PGDG RPM package] *******************************************
ok: [PRIMARY]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [PRIMARY]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [PRIMARY]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [PRIMARY]

TASK [Install PostgreSQL-17] ***************************************************
ok: [PRIMARY]

TASK [Creating data directory] *************************************************
ok: [PRIMARY]

TASK [Stop already running service] ********************************************
skipping: [PRIMARY]

TASK [Installing python3-psycopg2] *********************************************
ok: [PRIMARY]

TASK [Creating password file] **************************************************
ok: [PRIMARY]

TASK [Check if the data directory is empty] ************************************
ok: [PRIMARY]

TASK [Display message and exit if the data directory is not empty] *************
skipping: [PRIMARY]

TASK [Initialize the data directory for the Primary PostgreSQL server] *********
changed: [PRIMARY]

TASK [Append PostgreSQL Configuration] *****************************************
changed: [PRIMARY] => (item=listen_addresses = '*')
changed: [PRIMARY] => (item=wal_level = replica)
changed: [PRIMARY] => (item=max_wal_senders = 10)
changed: [PRIMARY] => (item=wal_keep_size = 1GB)

TASK [Start the server] ********************************************************
changed: [PRIMARY]

TASK [Creating a replication slots] ********************************************
[WARNING]: Database name has not been passed, used default database to connect
to.
ok: [PRIMARY] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
ok: [PRIMARY] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})

TASK [Creating a replication user] *********************************************
changed: [PRIMARY]

TASK [Update pg_hba.conf] ******************************************************
changed: [PRIMARY]

TASK [Restart the server] ******************************************************
changed: [PRIMARY]

TASK [Install pgpool2] *********************************************************
skipping: [PRIMARY]

TASK [Install pgpool-II release RPM] *******************************************
ok: [PRIMARY]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
ok: [PRIMARY]

TASK [Change permissions, owner, and group of the pcp.conf file] ***************
ok: [PRIMARY]

TASK [Add user and password to pcp.conf] ***************************************
changed: [PRIMARY]

TASK [Stopping pgpool2 service] ************************************************
ok: [PRIMARY]

TASK [Creating pcppass file] ***************************************************
ok: [PRIMARY]

TASK [Creating .pgpass file] ***************************************************
ok: [PRIMARY]

PLAY RECAP *********************************************************************
PRIMARY                    : ok=27   changed=9    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   


PLAY [Setup Standby servers] ***************************************************

TASK [Gathering Facts] *********************************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Load common variables] ***************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Load vault variables] ****************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Setup pgdg repo] *********************************************************
included: /home/postgres/pg_cirrus/3-node-cluster/ansible/tasks/setup-pgdg-repo.yml for STANDBY1, STANDBY2

TASK [Add pgdg repo to sources (Debian/Ubuntu)] ********************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Download PostgreSQL key (Debian/Ubuntu)] *********************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Update apt cache (Debian/Ubuntu)] ****************************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Download the PGDG RPM package] *******************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Add pgdg repo to YUM (Red Hat/CentOS/Fedora)] ****************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Clean YUM cache (Red Hat/CentOS/Fedora)] *********************************
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Update YUM cache (Red Hat/CentOS/Fedora)] ********************************
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Install PostgreSQL-17] ***************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Create data directory] ***************************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Set permissions for data directory] **************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Stop already running service] ********************************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Creating .pgpass file] ***************************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Check if the data directory is empty] ************************************
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Display error message and exit if the directory is not empty] ************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Run pg_basebackup for standby servers] ***********************************
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Update primary_slot_name in postgresql.conf] *****************************
skipping: [STANDBY2] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'}) 
changed: [STANDBY1] => (item={'NAME': 'STANDBY1', 'PG_REPLICATION_SLOT': 'slot_10_10_10_102'})
skipping: [STANDBY1] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'}) 
changed: [STANDBY2] => (item={'NAME': 'STANDBY2', 'PG_REPLICATION_SLOT': 'slot_10_10_10_103'})

TASK [Start the standby server] ************************************************
changed: [STANDBY1]
changed: [STANDBY2]

TASK [Install pgpool2] *********************************************************
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Install pgpool-II release RPM] *******************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Change permissions, owner, and group of the pcp.conf file] ***************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Add user and password to pcp.conf] ***************************************
changed: [STANDBY2]
changed: [STANDBY1]

TASK [Stopping pgpool2 service] ************************************************
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Creating pcppass file] ***************************************************
ok: [STANDBY2]
ok: [STANDBY1]

PLAY RECAP *********************************************************************
STANDBY1                   : ok=22   changed=6    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
STANDBY2                   : ok=22   changed=6    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   


PLAY [Configure pgpool2] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [PRIMARY]
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Load common variables] ***************************************************
ok: [PRIMARY]
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Load vault variables] ****************************************************
ok: [PRIMARY]
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Install pgpool2] *********************************************************
skipping: [PRIMARY]
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Install pgpool-II release RPM] *******************************************
ok: [PRIMARY]
ok: [STANDBY1]
ok: [STANDBY2]

TASK [Install pgpool-II for the specified PostgreSQL version on RHEL] **********
ok: [STANDBY2]
ok: [PRIMARY]
ok: [STANDBY1]

TASK [Create pgpool_logs directory in /var/log/] *******************************
ok: [PRIMARY]
ok: [STANDBY2]
ok: [STANDBY1]

TASK [Ensure pgpool.conf settings are present and not duplicated] **************
ok: [STANDBY2] => (item=listen_addresses = '*')
ok: [PRIMARY] => (item=listen_addresses = '*')
ok: [STANDBY1] => (item=listen_addresses = '*')
ok: [STANDBY2] => (item=port = 9999)
ok: [PRIMARY] => (item=port = 9999)
ok: [STANDBY1] => (item=port = 9999)
ok: [STANDBY2] => (item=log_statement = on)
ok: [PRIMARY] => (item=log_statement = on)
ok: [STANDBY1] => (item=log_statement = on)
ok: [STANDBY2] => (item=log_per_node_statement = on)
ok: [PRIMARY] => (item=log_per_node_statement = on)
ok: [STANDBY1] => (item=log_per_node_statement = on)
ok: [STANDBY2] => (item=sr_check_user = 'repuser')
ok: [PRIMARY] => (item=sr_check_user = 'repuser')
ok: [STANDBY1] => (item=sr_check_user = 'repuser')
ok: [STANDBY2] => (item=health_check_period = 10)
ok: [PRIMARY] => (item=health_check_period = 10)
ok: [STANDBY1] => (item=health_check_period = 10)
ok: [STANDBY2] => (item=health_check_user = 'repuser')
ok: [PRIMARY] => (item=health_check_user = 'repuser')
ok: [STANDBY1] => (item=health_check_user = 'repuser')
ok: [STANDBY2] => (item=pool_passwd = '/etc/pgpool-II/pool_passwd')
ok: [PRIMARY] => (item=pool_passwd = '/etc/pgpool-II/pool_passwd')
ok: [STANDBY1] => (item=pool_passwd = '/etc/pgpool-II/pool_passwd')
ok: [STANDBY2] => (item=sr_check_password = '')
ok: [PRIMARY] => (item=sr_check_password = '')
ok: [STANDBY1] => (item=sr_check_password = '')
ok: [STANDBY2] => (item=health_check_password = '')
ok: [PRIMARY] => (item=health_check_password = '')
ok: [STANDBY1] => (item=health_check_password = '')
ok: [STANDBY2] => (item=backend_hostname0 = '10.10.10.101')
ok: [PRIMARY] => (item=backend_hostname0 = '10.10.10.101')
ok: [STANDBY1] => (item=backend_hostname0 = '10.10.10.101')
ok: [STANDBY2] => (item=backend_hostname1 = '10.10.10.102')
ok: [PRIMARY] => (item=backend_hostname1 = '10.10.10.102')
ok: [STANDBY1] => (item=backend_hostname1 = '10.10.10.102')
ok: [STANDBY2] => (item=backend_port0 = 5432)
ok: [PRIMARY] => (item=backend_port0 = 5432)
ok: [STANDBY1] => (item=backend_port0 = 5432)
ok: [STANDBY2] => (item=backend_port1 = 5432)
ok: [PRIMARY] => (item=backend_port1 = 5432)
ok: [STANDBY1] => (item=backend_port1 = 5432)
ok: [PRIMARY] => (item=backend_weight0 = 0)
ok: [STANDBY2] => (item=backend_weight0 = 0)
ok: [STANDBY1] => (item=backend_weight0 = 0)
ok: [PRIMARY] => (item=backend_weight1 = 0.5)
ok: [STANDBY2] => (item=backend_weight1 = 0.5)
ok: [STANDBY1] => (item=backend_weight1 = 0.5)
ok: [PRIMARY] => (item=backend_data_directory0 = '/home/postgres/stormatics/pg_cirrus/data')
ok: [STANDBY2] => (item=backend_data_directory0 = '/home/postgres/stormatics/pg_cirrus/data')
ok: [STANDBY1] => (item=backend_data_directory0 = '/home/postgres/stormatics/pg_cirrus/data')
ok: [PRIMARY] => (item=backend_data_directory1 = '/home/postgres/stormatics/pg_cirrus/data')
ok: [STANDBY2] => (item=backend_data_directory1 = '/home/postgres/stormatics/pg_cirrus/data')
ok: [STANDBY1] => (item=backend_data_directory1 = '/home/postgres/stormatics/pg_cirrus/data')
ok: [PRIMARY] => (item=backend_flag0 = 'ALLOW_TO_FAILOVER')
ok: [STANDBY2] => (item=backend_flag0 = 'ALLOW_TO_FAILOVER')
ok: [PRIMARY] => (item=backend_flag1 = 'ALLOW_TO_FAILOVER')
ok: [STANDBY1] => (item=backend_flag0 = 'ALLOW_TO_FAILOVER')
ok: [STANDBY2] => (item=backend_flag1 = 'ALLOW_TO_FAILOVER')
ok: [PRIMARY] => (item=failover_command ='/home/postgres/stormatics/pg_cirrus/failover.sh %d %h %p %D %m %H %M %P %r %R %N %S 17 5432')
ok: [STANDBY1] => (item=backend_flag1 = 'ALLOW_TO_FAILOVER')
ok: [STANDBY2] => (item=failover_command ='/home/postgres/stormatics/pg_cirrus/failover.sh %d %h %p %D %m %H %M %P %r %R %N %S 17 5432')
ok: [STANDBY1] => (item=failover_command ='/home/postgres/stormatics/pg_cirrus/failover.sh %d %h %p %D %m %H %M %P %r %R %N %S 17 5432')
ok: [PRIMARY] => (item=follow_primary_command = '/home/postgres/stormatics/pg_cirrus/follow_primary.sh %d %h %p %D %m %H %M %P %r %R %N %S 5432 10.10.10.100')
ok: [STANDBY2] => (item=follow_primary_command = '/home/postgres/stormatics/pg_cirrus/follow_primary.sh %d %h %p %D %m %H %M %P %r %R %N %S 5432 10.10.10.100')
ok: [STANDBY1] => (item=follow_primary_command = '/home/postgres/stormatics/pg_cirrus/follow_primary.sh %d %h %p %D %m %H %M %P %r %R %N %S 5432 10.10.10.100')
ok: [PRIMARY] => (item=load_balance_mode = on)
ok: [STANDBY2] => (item=load_balance_mode = on)
ok: [STANDBY1] => (item=load_balance_mode = on)
ok: [PRIMARY] => (item=database_redirect_preference_list = '.*:standby')
ok: [STANDBY2] => (item=database_redirect_preference_list = '.*:standby')
ok: [STANDBY1] => (item=database_redirect_preference_list = '.*:standby')
ok: [PRIMARY] => (item=statement_level_load_balance = on)
ok: [STANDBY2] => (item=statement_level_load_balance = on)
ok: [STANDBY1] => (item=statement_level_load_balance = on)
ok: [PRIMARY] => (item=pcp_listen_addresses = '*')
ok: [STANDBY2] => (item=pcp_listen_addresses = '*')
ok: [STANDBY1] => (item=pcp_listen_addresses = '*')
ok: [PRIMARY] => (item=pcp_port = 9898)
ok: [STANDBY2] => (item=pcp_port = 9898)
ok: [STANDBY1] => (item=pcp_port = 9898)
ok: [PRIMARY] => (item=log_destination = 'stderr,syslog')
ok: [STANDBY2] => (item=log_destination = 'stderr,syslog')
ok: [STANDBY1] => (item=log_destination = 'stderr,syslog')
ok: [PRIMARY] => (item=logging_collector = on)
ok: [STANDBY2] => (item=logging_collector = on)
ok: [STANDBY1] => (item=logging_collector = on)
ok: [PRIMARY] => (item=log_directory = '/var/log/pgpool_logs')
ok: [STANDBY2] => (item=log_directory = '/var/log/pgpool_logs')
ok: [STANDBY1] => (item=log_directory = '/var/log/pgpool_logs')
ok: [PRIMARY] => (item=log_filename = 'pgpool-%Y-%m-%d_%H%M%S.log')
ok: [STANDBY2] => (item=log_filename = 'pgpool-%Y-%m-%d_%H%M%S.log')
ok: [STANDBY1] => (item=log_filename = 'pgpool-%Y-%m-%d_%H%M%S.log')
ok: [PRIMARY] => (item=log_file_mode = 0600)
ok: [STANDBY2] => (item=log_file_mode = 0600)
ok: [STANDBY1] => (item=log_file_mode = 0600)
ok: [PRIMARY] => (item=use_watchdog = on)
ok: [STANDBY2] => (item=use_watchdog = on)
ok: [STANDBY1] => (item=use_watchdog = on)
ok: [PRIMARY] => (item=hostname0 = '10.10.10.101')
ok: [STANDBY2] => (item=hostname0 = '10.10.10.101')
ok: [STANDBY1] => (item=hostname0 = '10.10.10.101')
ok: [PRIMARY] => (item=wd_port0 = 9000)
ok: [STANDBY2] => (item=wd_port0 = 9000)
ok: [STANDBY1] => (item=wd_port0 = 9000)
ok: [PRIMARY] => (item=pgpool_port0 = 9999)
ok: [STANDBY2] => (item=pgpool_port0 = 9999)
ok: [STANDBY1] => (item=pgpool_port0 = 9999)
ok: [PRIMARY] => (item=hostname1 = '10.10.10.102')
ok: [STANDBY2] => (item=hostname1 = '10.10.10.102')
ok: [STANDBY1] => (item=hostname1 = '10.10.10.102')
ok: [PRIMARY] => (item=wd_port1 = 9000)
ok: [STANDBY2] => (item=wd_port1 = 9000)
ok: [STANDBY1] => (item=wd_port1 = 9000)
ok: [PRIMARY] => (item=pgpool_port1 = 9999)
ok: [STANDBY2] => (item=pgpool_port1 = 9999)
ok: [STANDBY1] => (item=pgpool_port1 = 9999)
ok: [PRIMARY] => (item=hostname2 = '10.10.10.103')
ok: [STANDBY2] => (item=hostname2 = '10.10.10.103')
ok: [STANDBY1] => (item=hostname2 = '10.10.10.103')
ok: [PRIMARY] => (item=wd_port2 = 9000)
ok: [STANDBY2] => (item=wd_port2 = 9000)
ok: [STANDBY1] => (item=wd_port2 = 9000)
ok: [PRIMARY] => (item=pgpool_port2 = 9999)
ok: [STANDBY1] => (item=pgpool_port2 = 9999)
ok: [STANDBY2] => (item=pgpool_port2 = 9999)
ok: [PRIMARY] => (item=wd_priority = 1)
ok: [STANDBY1] => (item=wd_priority = 1)
ok: [STANDBY2] => (item=wd_priority = 1)
ok: [PRIMARY] => (item=wd_authkey = 'secretkey')
ok: [STANDBY2] => (item=wd_authkey = 'secretkey')
ok: [STANDBY1] => (item=wd_authkey = 'secretkey')
ok: [PRIMARY] => (item=wd_monitoring_interfaces_list = 'eth0')
ok: [STANDBY2] => (item=wd_monitoring_interfaces_list = 'eth0')
ok: [STANDBY1] => (item=wd_monitoring_interfaces_list = 'eth0')
ok: [PRIMARY] => (item=heartbeat_hostname0 = '10.10.10.102')
ok: [STANDBY2] => (item=heartbeat_hostname0 = '10.10.10.102')
ok: [STANDBY1] => (item=heartbeat_hostname0 = '10.10.10.102')
ok: [PRIMARY] => (item=heartbeat_port0 = 9694)
ok: [STANDBY2] => (item=heartbeat_port0 = 9694)
ok: [STANDBY1] => (item=heartbeat_port0 = 9694)
ok: [PRIMARY] => (item=heartbeat_device0 = 'eth0')
ok: [STANDBY2] => (item=heartbeat_device0 = 'eth0')
ok: [STANDBY1] => (item=heartbeat_device0 = 'eth0')
ok: [PRIMARY] => (item=heartbeat_hostname1 = '10.10.10.103')
ok: [STANDBY2] => (item=heartbeat_hostname1 = '10.10.10.103')
ok: [STANDBY1] => (item=heartbeat_hostname1 = '10.10.10.103')
ok: [PRIMARY] => (item=heartbeat_port1 = 9694)
ok: [STANDBY2] => (item=heartbeat_port1 = 9694)
ok: [STANDBY1] => (item=heartbeat_port1 = 9694)
ok: [PRIMARY] => (item=heartbeat_device1 = 'eth0')
ok: [STANDBY2] => (item=heartbeat_device1 = 'eth0')
ok: [STANDBY1] => (item=heartbeat_device1 = 'eth0')
ok: [PRIMARY] => (item=heartbeat_hostname2 = '10.10.10.101')
ok: [STANDBY2] => (item=heartbeat_hostname2 = '10.10.10.101')
ok: [STANDBY1] => (item=heartbeat_hostname2 = '10.10.10.101')
ok: [PRIMARY] => (item=heartbeat_port2 = 9694)
ok: [STANDBY2] => (item=heartbeat_port2 = 9694)
ok: [STANDBY1] => (item=heartbeat_port2 = 9694)
ok: [PRIMARY] => (item=heartbeat_device2 = 'eth0')
ok: [STANDBY2] => (item=heartbeat_device2 = 'eth0')
ok: [STANDBY1] => (item=heartbeat_device2 = 'eth0')
ok: [PRIMARY] => (item=wd_heartbeat_keepalive = 2)
ok: [STANDBY2] => (item=wd_heartbeat_keepalive = 2)
ok: [STANDBY1] => (item=wd_heartbeat_keepalive = 2)
ok: [PRIMARY] => (item=wd_heartbeat_deadtime = 10)
ok: [STANDBY2] => (item=wd_heartbeat_deadtime = 10)
ok: [STANDBY1] => (item=wd_heartbeat_deadtime = 10)
ok: [PRIMARY] => (item=delegate_IP = '10.10.10.104')
ok: [STANDBY2] => (item=delegate_IP = '10.10.10.104')
ok: [PRIMARY] => (item=enable_consensus_with_half_votes = off)
ok: [STANDBY1] => (item=delegate_IP = '10.10.10.104')
ok: [STANDBY2] => (item=enable_consensus_with_half_votes = off)
ok: [STANDBY1] => (item=enable_consensus_with_half_votes = off)

TASK [Search for existing standby2 in pgpool.conf] *****************************
changed: [STANDBY1]
changed: [STANDBY2]
changed: [PRIMARY]

TASK [Add configurations for standby2 to pgpool.conf if not already present] ***
skipping: [PRIMARY]
skipping: [STANDBY1]
skipping: [STANDBY2]

TASK [Change permissions, owner, and group of the pcp.conf file] ***************
ok: [STANDBY1]
ok: [PRIMARY]
ok: [STANDBY2]

TASK [Add user and password to pcp.conf] ***************************************
changed: [STANDBY2]
changed: [PRIMARY]
changed: [STANDBY1]

TASK [Create a pool_passwd file] ***********************************************
changed: [STANDBY2]
changed: [PRIMARY]
changed: [STANDBY1]

TASK [Ensure PostgreSQL socket directory exists] *******************************
ok: [STANDBY1]
ok: [STANDBY2]
ok: [PRIMARY]

TASK [Stopping the already running pgpool2 service] ****************************
ok: [STANDBY1]
ok: [STANDBY2]
ok: [PRIMARY]

TASK [Create pgpool_node_id file based on role] ********************************
changed: [STANDBY2]
changed: [PRIMARY]
changed: [STANDBY1]

TASK [Copy entire folder] ******************************************************
changed: [STANDBY1]
changed: [PRIMARY]
changed: [STANDBY2]

TASK [Start pgpool2 service] ***************************************************
changed: [PRIMARY]
changed: [STANDBY1]
changed: [STANDBY2]

PLAY RECAP *********************************************************************
PRIMARY                    : ok=16   changed=6    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
STANDBY1                   : ok=16   changed=6    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
STANDBY2                   : ok=16   changed=6    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   

