#!/bin/bash

# follow_primary.sh
# This script is executed by follow_primary_command parameter used by pgpool.conf file. This file gets executed on all standby nodes including new primary node as well.
# The standby node replicated from new primary node.

set -o xtrace
NODE_ID="$1"
NODE_HOST="$2"
NODE_PORT="$3"
NODE_PGDATA="$4"
NEW_MAIN_NODE_ID="$5"
NEW_MAIN_NODE_HOST="$6"
OLD_MAIN_NODE_ID="$7"
OLD_PRIMARY_NODE_ID="$8"
NEW_MAIN_NODE_PORT="$9"
NEW_MAIN_NODE_PGDATA="${10}"
OLD_PRIMARY_NODE_HOST="${11}"
OLD_PRIMARY_NODE_PORT="${12}"
SLOT_NAME=$(echo "$NODE_HOST" | tr '.' '_')

# If this script being executed on primary on primary we dont need to do anything
if [[ "$NODE_HOST" == "$OLD_PRIMARY_NODE_HOST" ]]; then
	echo Nothing to do
	exit 0
fi

# Create a new replication slot on new primary
ssh postgres@$NEW_MAIN_NODE_HOST "psql -d postgres -w -c \"SELECT pg_create_physical_replication_slot('slot_$SLOT_NAME');\""

# Update connection string on all standby nodes to point to new primary
ssh postgres@$NODE_HOST "psql -d postgres -w -c \"ALTER SYSTEM SET primary_conninfo = 'user=repuser password=repuser host=$NEW_MAIN_NODE_HOST port=$NODE_PORT';\""

# Reload connection properties
ssh postgres@$NODE_HOST "psql -d postgres -w -c \"SELECT pg_reload_conf();\""

